% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fit_model.R
\name{fit_model}
\alias{fit_model}
\title{Model fitting}
\usage{
fit_model(
  data,
  ncluster = 1,
  seed = NULL,
  verbose = TRUE,
  initial_estimate = NULL
)
}
\arguments{
\item{data}{An object of class \code{\link{fHMM_data}}.}

\item{ncluster}{Set the number of clusters for parallel optimization runs to reduce
optimization time.
By default, \code{ncluster = 1} (no clustering).}

\item{seed}{Set a seed for the generation of initial values.
No seed by default.}

\item{verbose}{Set to \code{TRUE} to print progress messages.}

\item{initial_estimate}{Optionally defines an initial estimate for the numerical likelihood
optimization. Good initial estimates can improve the optimization process.
Can be:
\itemize{
\item \code{NULL} (the default), in this case
\itemize{
\item applies a heuristic to calculate a good initial estimate
\item or uses the true parameter values (if available and
\code{data$controls$origin} is \code{TRUE})
}
\item or an object of class \code{parUncon}, for example the estimate of a
previously fitted model, i.e. the element \code{model$estimate}.
}}
}
\value{
An object of class \code{\link{fHMM_model}}.
}
\description{
This function fits a hidden Markov model via numerical likelihood
maximization.
}
\details{
Multiple optimization runs starting from different initial values are
computed in parallel if \code{ncluster > 1}.
}
\examples{
### 2-state HMM with normal distributions

# define model
controls <- set_controls(states = 2, sdds = "normal", horizon = 80, runs = 5)

# define parameters
parameters <- fHMM_parameters(controls, mu = c(-1, 1), seed = 1)

# sample data
data <- prepare_data(controls, true_parameter = parameters, seed = 1)

# fit model
model <- fit_model(data, seed = 1)

# inspect fit
summary(model)
plot(model, "sdds")

# decode states
model <- decode_states(model)

# predict
predict(model, ahead = 5)

}
