% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fHMM_parameters.R
\name{parameter_transformations}
\alias{parameter_transformations}
\alias{par2parUncon}
\alias{parUncon2parCon}
\alias{parCon2par}
\alias{par2parCon}
\alias{parCon2parUncon}
\alias{parUncon2par}
\alias{muCon2muUncon}
\alias{muUncon2muCon}
\alias{sigmaCon2sigmaUncon}
\alias{sigmaUncon2sigmaCon}
\alias{dfCon2dfUncon}
\alias{dfUncon2dfCon}
\alias{Gamma2gammasCon}
\alias{Gamma2gammasUncon}
\alias{gammasCon2Gamma}
\alias{gammasCon2gammasUncon}
\alias{gammasUncon2Gamma}
\alias{gammasUncon2gammasCon}
\title{Parameter transformations}
\usage{
par2parUncon(
  par,
  controls = list(),
  hierarchy = FALSE,
  states = if (!hierarchy) 2 else c(2, 2),
  sdds = if (!hierarchy) "normal" else c("normal", "normal")
)

parUncon2parCon(
  parUncon,
  controls = list(),
  hierarchy = FALSE,
  states = if (!hierarchy) 2 else c(2, 2),
  sdds = if (!hierarchy) "normal" else c("normal", "normal")
)

parCon2par(
  parCon,
  controls = list(),
  hierarchy = FALSE,
  states = if (!hierarchy) 2 else c(2, 2),
  sdds = if (!hierarchy) "normal" else c("normal", "normal")
)

par2parCon(
  par,
  controls = list(),
  hierarchy = FALSE,
  states = if (!hierarchy) 2 else c(2, 2),
  sdds = if (!hierarchy) "normal" else c("normal", "normal")
)

parCon2parUncon(
  parCon,
  controls = list(),
  hierarchy = FALSE,
  states = if (!hierarchy) 2 else c(2, 2),
  sdds = if (!hierarchy) "normal" else c("normal", "normal")
)

parUncon2par(
  parUncon,
  controls = list(),
  hierarchy = FALSE,
  states = if (!hierarchy) 2 else c(2, 2),
  sdds = if (!hierarchy) "normal" else c("normal", "normal")
)

muCon2muUncon(muCon, link, prefix = "muUncon_")

muUncon2muCon(muUncon, link, prefix = "muCon_")

sigmaCon2sigmaUncon(sigmaCon, prefix = "sigmaUncon_")

sigmaUncon2sigmaCon(sigmaUncon, prefix = "sigmaCon_")

dfCon2dfUncon(dfCon, prefix = "dfUncon_")

dfUncon2dfCon(dfUncon, prefix = "dfCon_")

Gamma2gammasCon(Gamma, shift = 0.001, prefix = "gammasCon_")

Gamma2gammasUncon(Gamma, prefix = "gammasUncon_")

gammasCon2Gamma(gammasCon, dim, prefix = "state_")

gammasCon2gammasUncon(gammasCon, dim, prefix = "gammasUncon_")

gammasUncon2Gamma(gammasUncon, dim, prefix = "state_")

gammasUncon2gammasCon(gammasUncon, dim, prefix = "gammasCon_")
}
\arguments{
\item{par}{An object of class \code{\link{fHMM_parameters}}, which is a \code{list}
of model parameters.}

\item{controls}{Either a \code{list} or an object of class \code{fHMM_controls}.

The \code{list} can contain the following elements, which are described
in more detail below:
\itemize{
\item \code{hierarchy}, defines an hierarchical HMM,
\item \code{states}, defines the number of states,
\item \code{sdds}, defines the state-dependent distributions,
\item \code{horizon}, defines the time horizon,
\item \code{period}, defines a flexible, periodic fine-scale time horizon,
\item \code{data}, a \code{list} of controls that define the data,
\item \code{fit}, a \code{list} of controls that define the model fitting,
\item \code{seed}, defines a seed for reproducibility,
\item \code{verbose}, defines whether to print progress messages.
}
Either none, all, or selected elements can be specified.

Unspecified parameters are set to their default values, see below.

Specifications in \code{controls} override individual specifications.}

\item{hierarchy}{A \code{logical}, set to \code{TRUE} for an hierarchical HMM.

If \code{hierarchy = TRUE}, some of the other controls must be specified for
the coarse-scale and the fine-scale layer.

By default, \code{hierarchy = FALSE}.}

\item{states}{An \code{integer}, the number of states of the underlying Markov chain.

If \code{hierarchy = TRUE}, \code{states} must be a \code{vector} of length
2. The first entry corresponds to the coarse-scale layer, while the second
entry corresponds to the fine-scale layer.

By default, \code{states = 2} if \code{hierarchy = FALSE} and
\code{states = c(2, 2)} if \code{hierarchy = TRUE}.}

\item{sdds}{A \code{character}, specifying the state-dependent distribution. One of
\itemize{
\item \code{"normal"} (the normal distribution),
\item \code{"lognormal"} (the log-normal distribution),
\item \code{"t"} (the t-distribution),
\item \code{"gamma"} (the gamma distribution),
\item \code{"poisson"} (the Poisson distribution).
}

The distribution parameters, i.e. the
\itemize{
\item mean \code{mu},
\item standard deviation \code{sigma} (not for the Poisson distribution),
\item degrees of freedom \code{df} (only for the t-distribution),
}
can be fixed via, e.g., \code{"t(df = 1)"} or
\code{"gamma(mu = 0, sigma = 1)"}.
To fix different values of a parameter for different states, separate by
"|", e.g. \code{"poisson(mu = 1|2|3)"}.

If \code{hierarchy = TRUE}, \code{sdds} must be a \code{vector} of length 2.
The first entry corresponds to the coarse-scale layer, while the second entry
corresponds to the fine-scale layer.

By default, \code{sdds = "normal"} if \code{hierarchy = FALSE} and
\code{sdds = c("normal", "normal")} if \code{hierarchy = TRUE}.

See also \code{\link{fHMM_sdds}} for more details.}

\item{parUncon}{An object of class \code{parUncon}, which is a \code{numeric} \code{vector}
with identified and unconstrained model parameters in the following order:
\enumerate{
\item non-diagonal transition probabilities \code{gammasUncon}
\item expectations \code{muUncon}
\item standard deviations \code{sigmaUncon} (if any)
\item degrees of freedom \code{dfUncon} (if any)
\item fine-scale parameters for each coarse-scale state, in the same order (if any)
}}

\item{parCon}{An object of class \code{parCon}, which is a \code{numeric} \code{vector}
with identified (and constrained) model parameters in the following order:
\enumerate{
\item non-diagonal transition probabilities \code{gammasCon}
\item expectations \code{muCon}
\item standard deviations \code{sigmaCon} (if any)
\item degrees of freedom \code{dfCon} (if any)
\item fine-scale parameters for each coarse-scale state, in the same order (if any)
}}

\item{muCon, muUncon}{A vector of (un-) constrained expected values.}

\item{link}{Either \code{TRUE} or \code{FALSE}, determining whether to apply the link
function.}

\item{prefix}{A \code{character} prefix for labelling.}

\item{sigmaCon, sigmaUncon}{A vector of (un-) constrained standard deviations.}

\item{dfCon, dfUncon}{A vector of (un-) constrained degrees of freedom.}

\item{shift}{A small, positive \code{numeric} for shifting boundary probabilities.
By default, \code{shift = 1e-3}.}

\item{gammasCon, gammasUncon}{A vector of (un-) constrained non-diagonal transition probabilities.}

\item{dim}{An \code{integer}, the dimension of the transition probability matrix.}
}
\value{
For \code{par2parUncon}: a vector of unconstrained model parameters.

For \code{parUncon2parCon}: a vector of constrained model parameters.

For \code{parCon2par}: an object of class \code{\link{fHMM_parameters}}.

For \code{par2parCon}: a vector of constrained model parameters.

For \code{parCon2parUncon}: a vector of unconstrained model parameters.

For \code{parUncon2par}: an object of class \code{fHMM_parameters}.

For \code{muCon2muUncon}: a vector of unconstrained expected values.

For \code{muUncon2muCon}: a vector of constrained expected values.

For \code{sigmaCon2sigmaUncon}: a vector of unconstrained standard
deviations.

For \code{sigmaUncon2sigmaCon}: a vector of constrained standard deviations.

For \code{dfCon2dfUncon}: a vector of unconstrained degrees of freedom.

For \code{dfUncon2dfCon}: a vector of constrained degrees of freedom.

For \code{Gamma2gammasCon}: a vector of constrained non-diagonal matrix
elements (column-wise).

For \code{Gamma2gammasUncon}: a vector of unconstrained non-diagonal matrix
elements (column-wise).

For \code{gammasCon2Gamma}: a transition probability matrix.

For \code{gammasCon2gammasUncon}: a vector of unconstrained non-diagonal
elements of the transition probability matrix.

For \code{gammasUncon2Gamma}: a transition probability matrix.

For \code{gammasUncon2gammasCon}: a vector of constrained non-diagonal
elements of a transition probability matrix.
}
\description{
These helper functions transform model parameters between
\itemize{
\item constrained spaces (suffix \code{*Con})
\item and unconstrained spaces (suffix \code{*Uncon}).
}
The former is useful for interpretation, the latter for unconstrained
optimization.
}
\keyword{internal}
