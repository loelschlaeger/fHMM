[{"path":"https://loelschlaeger.github.io/fHMM/articles/fHMM.html","id":"motivation","dir":"Articles","previous_headings":"","what":"Motivation","title":"Introduction","text":"Earning money stock trading simple: one needs buy sell stocks right moment. general, stock traders seek invest beginning upward trends (hereon termed bullish markets) repel stocks just time prices fall (hereon termed bearish markets). stock prices depend variety environmental factors (Humpe Macmillan 2009; Cohen, Diether, Malloy 2013), chance certainly plays fundamental role hitting exact moments. However, investigating market behavior can lead better understanding trends alternate thereby increases chance making profitable investment decisions. {fHMM} package aims contributing investigations applying HMMs detect bearish bullish markets financial time series. also implemented hierarchical model extension presented Oelschläger Adam (2021), improves model’s capability distinguishing short- long-term trends allows interpret market dynamics multiple time scales.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/articles/fHMM.html","id":"package-and-vignettes-overview","dir":"Articles","previous_headings":"","what":"Package and vignettes overview","title":"Introduction","text":"functionality {fHMM} package can classified functions data preparation, model estimation, model evaluation. following flowchart visualizes dependencies: flowchart {fHMM} package: Functions boxed classes displayed circles. tasks data preparation, model estimation, model evaluation well corresponding functions classes explained detail separate vignettes: vignette Model definition defines HMM hierarchical extension. vignette Controls introduces set_controls() function used model specifications. vignette Data management explains prepare simulate data introduces download_data() function can download financial data directly https://finance.yahoo.com. vignette Model estimation defines likelihood function explains task numerical maximization via fit_model() function. vignette State decoding prediction introduces Viterbi algorithm used decoding likely underlying state sequence forecasting. vignette Model checking explains task checking fitted model via computing (pseudo-) residuals, implemented compute_residuals() function. vignette Model selection discusses task selecting (sense) best model among set competing models via compare_models() function.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/articles/fHMM.html","id":"placement-in-the-literature","dir":"Articles","previous_headings":"","what":"Placement in the literature","title":"Introduction","text":"last decades, various HMM-type models emerged popular tools modeling financial time series subject state-switching time (Schaller Van Norden 1997; Dias, Vermunt, Ramos 2010; Ang Timmermann 2012; De Angelis Viroli 2017). Rydén, Teräsvirta, Åsbrink (1998), Bulla Bulla (2006), Nystrup, Madsen, Lindström (2015), e.g., used HMMs derive stylized facts stock returns, Hassan Nath (2005) Nystrup, Madsen, Lindström (2017) demonstrated HMMs can prove useful economic forecasting. recently, Lihn (2017) applied HMMs Standard Poor’s 500, HMMs used identify different levels market volatility, aiming providing evidence conjecture returns exhibit negative correlation volatility. Another application S&P 500 can found Nguyen (2018), HMMs used predict monthly closing prices derive optimal trading strategy, shown outperform conventional buy--hold strategy. applications, involve HMM-type models asset allocation portfolio optimization, can found Bekaert Ang (2002), Bulla et al. (2011), Nystrup, Madsen, Lindström (2015) Nystrup, Madsen, Lindström (2018), name examples. applications demonstrate HMMs constitute versatile class time series models naturally accounts dynamics typically exhibited financial time series.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/articles/fHMM.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"Introduction","text":"Ang, ., . Timmermann. 2012. “Regime Changes Financial Markets.” Annual Review Financial Economics 4 (1): 313–37. https://doi.org/10.1146/annurev-financial-110311-101808. Bekaert, G., . Ang. 2002. “International Asset Allocation Regime Shifts.” Review Financial Studies 15 (February): 1137–87. https://doi.org/10.1093/rfs/15.4.1137. Bulla, J., . Bulla. 2006. “Stylized Facts Financial Time Series Hidden Semi-Markov Models.” Computational Statistics Data Analysis 51 (4): 2192–2209. https://doi.org/10.1016/j.csda.2006.07.021. Bulla, J., S. Mergner, . Bulla, . Sesboüé, C. Chesneau. 2011. “Markov-Switching Asset Allocation: Profitable Strategies Exist?” Journal Asset Management 12 (July): 310–21. https://doi.org/10.1057/jam.2010.27. Cohen, L., K. Diether, C. Malloy. 2013. “Legislating Stock Prices.” Journal Financial Economics 110 (3): 574–95. De Angelis, L., C. Viroli. 2017. “Markov-Switching Regression Model Non-Gaussian Innovations: Estimation Testing.” Studies Nonlinear Dynamics & Econometrics 21 (2). https://doi.org/doi:10.1515/snde-2015-0118. Dias, J., J. Vermunt, S. Ramos. 2010. “Mixture Hidden Markov Models Finance Research.” Psycho-Oncology - PSYCHO-ONCOL, January, 451–59. https://doi.org/10.1007/978-3-642-01044-6_41. Hassan, Md, Baikunth Nath. 2005. “Stock Market Forecasting Using Hidden Markov Model: New Approach.” 5th International Conference Intelligent Systems Design Applications 2005 (October): 192–96. https://doi.org/10.1109/ISDA.2005.85. Humpe, Andreas, Peter Macmillan. 2009. “Can Macroeconomic Variables Explain Long-Term Stock Market Movements? Comparison Us Japan.” Applied Financial Economics 19 (2): 111–19. https://doi.org/10.1080/09603100701748956. Lihn, S. H. 2017. “Hidden Markov Model Financial Time Series Application S&P 500 Index.” Quantitative Finance (Forthcoming). Nguyen, N. 2018. “Hidden Markov Model Stock Trading.” International Journal Financial Studies 6 (2). Nystrup, P., H. Madsen, E. Lindström. 2015. “Stylised Facts Financial Time Series Hidden Markov Models Continuous Time.” Quantitative Finance 15 (9): 1531–41. https://doi.org/10.1080/14697688.2015.1004801. ———. 2017. “Long Memory Financial Time Series Hidden Markov Models Time-Varying Parameters.” Journal Forecasting 36 (8): 989–1002. ———. 2018. “Dynamic Portfolio Optimization Across Hidden Market Regimes.” Quantitative Finance 18 (1): 83–95. https://doi.org/10.1080/14697688.2017.1342857. Oelschläger, L., T. Adam. 2021. “Detecting Bearish Bullish Markets Financial Time Series Using Hierarchical Hidden Markov Models.” Statistical Modelling. Rydén, T., T. Teräsvirta, S. Åsbrink. 1998. “Stylized Facts Daily Return Series Hidden Markov Model.” Journal Applied Econometrics 13 (3): 217–44. Schaller, H., S. Van Norden. 1997. “Regime Switching Stock Market Returns.” Applied Financial Economics 7 (2): 177–91. https://doi.org/10.1080/096031097333745.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/articles/v01_model_definition.html","id":"the-hidden-markov-model","dir":"Articles","previous_headings":"","what":"The Hidden Markov Model","title":"Model definition","text":"Hidden Markov models (HMMs) modeling framework time series data sequence observation assumed depend latent state process. peculiarity , instead observation process, state process directly observed. However, latent states comprise information environment model applied . connection hidden state process observed state-dependent process arises following: Let \\(N\\) number possible states. assume point time \\(t = 1, \\ldots, T\\), underlying process \\((S_t)_{t = 1, \\ldots, T}\\) selects one \\(N\\) states. , depending active state \\(S_t \\\\{ 1, \\ldots, N \\}\\), observation \\(X_t\\) state-dependent process \\((X_t)_{t = 1, \\ldots, T}\\) generated one \\(N\\) distributions \\(f^{(1)},\\dots,f^{(N)}.\\)2 Furthermore, assume \\((S_t)_t\\) Markovian, .e. assume actual state depends previous state. Henceforth, can identify process initial distribution \\(\\delta\\) transition probability matrix (t.p.m.) \\(\\Gamma\\). Moreover, construction, force process \\((X_t)_{t = 1, \\ldots, T}\\) satisfy conditional independence assumption, .e. actual observation \\(X_t\\) depends current state \\(S_t\\), depend previous observations states . following graphic visualizes dependence structure: Dependence structure HMM. Referring financial data, different states can serve proxies actual market situation, e.g. calm nervous. Even though moods observed directly, price changes trading volumes, clearly depend current mood market, can observed. Thereby, using underlying Markov process, can detect mood active point time different moods alternate. Depending current mood, price change generated different distribution. distributions characterize moods terms expected return volatility.3 Following Zucchini, MacDonald, Langrock (2016), assume initial distribution \\(\\delta\\) equals stationary distribution \\(\\pi\\), \\(\\pi = \\pi \\Gamma\\), .e. stationary henceforth initial distribution determined \\(\\Gamma\\).4 reasonable practical point view: one hand, hidden state process evolving time start observe hence can assumed stationary. hand, setting \\(\\delta=\\pi\\) reduces number parameters need estimated, convenient computational perspective.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/articles/v01_model_definition.html","id":"adding-a-hierarchical-structure","dir":"Articles","previous_headings":"","what":"Adding a Hierarchical Structure","title":"Model definition","text":"hierarchical hidden Markov model (HMMM) flexible extension HMM can jointly model data observed two different time scales. two time series, one coarser one finer scale, differ number observations, e.g. monthly observations coarser scale daily weekly observations finer scale. Following concept HMMs, can model state-dependent time series jointly. First, treat time series coarser scale stemming ordinary HMM, refer coarse-scale HMM: time point \\(t\\) coarse-scale time space \\(\\{1,\\dots,T\\}\\), underlying process \\((S_t)_t\\) selects one state coarse-scale state space \\(\\{1,\\dots,N\\}\\). call \\((S_t)_t\\) hidden coarse-scale state process. Depending state active \\(t\\), one \\(N\\) distributions \\(f^{(1)},\\dots,f^{(N)}\\) realizes observation \\(X_t\\). process \\((X_t)_t\\) called observed coarse-scale state-dependent process. processes \\((S_t)_t\\) \\((X_t)_t\\) properties , namely \\((S_t)_t\\) first-order Markov process \\((X_t)_t\\) satisfies conditional independence assumption. Subsequently, segment observations fine-scale time series \\(T\\) distinct chunks, contains data points correspond \\(t\\)-th coarse-scale time point. Assuming \\(T^*\\) fine-scale observations every coarse-scale time point, face \\(T\\) chunks comprising \\(T^*\\) fine-scale observations . hierarchical structure now evinces model chunks one \\(N\\) possible fine-scale HMMs. fine-scale HMMs t.p.m. \\(\\Gamma^{*()}\\), initial distribution \\(\\delta^{*()}\\), stationary distribution \\(\\pi^{*()}\\), state-dependent distributions \\(f^{*(,1)},\\dots,f^{*(,N^*)}\\). fine-scale HMM selected explain \\(t\\)-th chunk fine-scale observations depends hidden coarse-scale state \\(S_t\\). \\(\\)-th fine-scale HMM explaining \\(t\\)-th chunk fine-scale observations consists following two stochastic processes: time point \\(t^*\\) fine-scale time space \\(\\{1,\\dots,T^*\\}\\), process \\((S^*_{t,t^*})_{t^*}\\) selects one state fine-scale state space \\(\\{1,\\dots,N^*\\}\\). call \\((S^*_{t,t^*})_{t^*}\\) hidden fine-scale state process. Depending state active \\(t^*\\), one \\(N^*\\) distributions \\(f^{*(,1)},\\dots,f^{*(,N^*)}\\) realizes observation \\(X^*_{t,t^*}\\). process \\((X^*_{t,t^*})_{t^*}\\) called observed fine-scale state-dependent process. fine-scale processes \\((S^*_{1,t^*})_{t^*},\\dots,(S^*_{T,t^*})_{t^*}\\) \\((X^*_{1,t^*})_{t^*},\\dots,(X^*_{T,t^*})_{t^*}\\) satisfy Markov property conditional independence assumption, respectively, well. Furthermore, assumed fine-scale HMM explaining \\((X^*_{t,t^*})_{t^*}\\) depends \\(S_t\\). hierarchical structure visualized following: Dependence structure HHMM.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/articles/v01_model_definition.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"Model definition","text":"Norris, J. R. 1997. “Markov Chains.” Cambridge University Press. Oelschläger, L., T. Adam. 2021. “Detecting Bearish Bullish Markets Financial Time Series Using Hierarchical Hidden Markov Models.” Statistical Modelling. Zucchini, W., . L. MacDonald, R. Langrock. 2016. “Hidden Markov Models Time Series: Introduction Using R, 2nd Edition.” Chapman Hall/CRC.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/articles/v02_controls.html","id":"the-set_controls-function","dir":"Articles","previous_headings":"","what":"The set_controls function","title":"Controls","text":"{fHMM} philosophy start modeling process setting data, model, estimation specifications. done defining named list controls passing set_controls() function. function checks specifications returns fHMM_controls object stores specifications thereby provides required information {fHMM} functionalities.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/articles/v02_controls.html","id":"example-specifications","dir":"Articles","previous_headings":"","what":"Example specifications","title":"Controls","text":"demonstration, list example specifications using data Deutscher Aktienindex DAX2 [@jan92]:","code":"download_data(symbol = \"^GDAXI\", file = \"dax.csv\") #> Download successful. #> * symbol: ^GDAXI  #> * from: 1987-12-30  #> * to: 2022-04-06  #> * path: /Users/runner/work/fHMM/fHMM/vignettes/dax.csv"},{"path":"https://loelschlaeger.github.io/fHMM/articles/v02_controls.html","id":"hmms-for-empirical-data","dir":"Articles","previous_headings":"Example specifications","what":"HMMs for empirical data","title":"Controls","text":"following lines code specify 3-state HMM state-dependent t-distributions data file dax.csv. dates provided column called Date data column called Close. logreturns = TRUE line transforms index data log-returns. runs = 50 line sets number numerical optimization runs 50.","code":"controls <- list(   states = 3,   sdds   = \"t\",   data   = list(file        = \"dax.csv\",                 date_column = \"Date\",                 data_column = \"Close\",                 logreturns  = TRUE),   fit    = list(runs        = 50) ) set_controls(controls) #> fHMM controls: #> * hierarchy: FALSE  #> * data type: empirical  #> * number of states: 3  #> * sdds: t()  #> * number of runs: 50"},{"path":"https://loelschlaeger.github.io/fHMM/articles/v02_controls.html","id":"simulated-hmm-data","dir":"Articles","previous_headings":"Example specifications","what":"Simulated HMM data","title":"Controls","text":"following specifies 2-state HMM state-dependent Gamma distributions, expectation values state 1 2 fixed 0.5 2, respectively. model fitted 500 data points (horizon = 500), going simulated model specification.","code":"controls <- list(   states  = 2,   sdds    = \"gamma(mu = 0.5|2)\",   horizon = 500 ) set_controls(controls) #> fHMM controls: #> * hierarchy: FALSE  #> * data type: simulated  #> * number of states: 2  #> * sdds: gamma(mu = 0.5|2)  #> * number of runs: 100"},{"path":"https://loelschlaeger.github.io/fHMM/articles/v02_controls.html","id":"hierarchical-hmms","dir":"Articles","previous_headings":"Example specifications","what":"Hierarchical HMMs","title":"Controls","text":"Specifying hierarchical HMMs analogously, except new parameters can specified (example period, see ) parameters now can specified hierarchies. help page set_controls() function provides overview possible specifications. list controls. Either none, , selected parameters can specified. Unspecified parameters set default values (values brackets). hierarchy = TRUE, parameters (*) must vector length 2, first entry corresponds coarse-scale second entry fine-scale layer. hierarchy (FALSE): boolean, set TRUE hierarchical HMM. states (*) (2): number states underlying Markov chain. sdds (*) (“t(df = Inf)”): Specifying state-dependent distribution, one “t” (t-distribution) “gamma” (gamma distribution). fix one parameter values, write e.g. “t(df = Inf)” “gamma(mu = 0, sigma = 1)”, respectively. fix different values one parameter different states, separate “|”, e.g. “t(mu = -1|1)”. horizon (*) (100): numeric, specifying length time horizon. first entry horizon ignored data specified. period (“m”): relevant hierarchy = TRUE horizon[2] = NA. case, specifies flexible, periodic fine-scale time horizon can one “w” week, “m” month, “q” quarter, “y” year. data (NA): list controls specifying data. data = NA, data gets simulated. Otherwise: file (*): character, path .csv-file financial data, must column named date_column (dates) data_column (financial data). date_column (*) (“Date”): character, name column file dates. Can NA case consecutive integers used time points. data_column (*) (“Close”): character, name column file financial data. (NA): character format “YYYY-MM-DD”, setting lower data limit. lower limit = NA. Ignored controls\\(data\\)date_column NA. (NA): character format “YYYY-MM-DD”, setting upper data limit. upper limit = NA. Ignored controls\\(data\\)date_column NA. logreturns (*) (FALSE): boolean, TRUE data transformed log-returns. merge (function(x) mean(x)): relevant hierarchy = TRUE. case, function, merges numeric vector fine-scale data x one coarse-scale observation. example, merge = function(x) mean(x) defines mean fine-scale data coarse-scale observation, merge = function(x) mean(abs(x)) mean absolute values, merge = function(x) (abs(x)) sum absolute values, merge = function(x) (tail(x,1)-head(x,1))/head(x,1) relative change first last fine-scale observation. fit: list controls specifying model fitting: runs (100): integer, setting number optimization runs. origin (FALSE): boolean, TRUE optimization initialized true parameter values. simulated data. origin = TRUE, sets run = 1 accept = 1:5. accept (1:3): integer (vector), specifying optimization runs accepted based output code nlm. gradtol (1e-6): positive numeric value, passed nlm. iterlim (200): positive integer, passed nlm. print.level (0): One 0, 1, 2, passed nlm. steptol (1e-6): positive numeric value, passed nlm.","code":"controls <- list(   hierarchy = TRUE,   horizon   = c(100, 10),   sdds      = c(\"t(df = 1)\", \"t(df = Inf)\"),   period    = \"m\" ) set_controls(controls) #> fHMM controls: #> * hierarchy: TRUE  #> * data type: simulated  #> * number of states: 2 2  #> * sdds: t(df = 1) t(df = Inf)  #> * number of runs: 100 ?set_controls"},{"path":"https://loelschlaeger.github.io/fHMM/articles/v03_data_management.html","id":"empirical-data","dir":"Articles","previous_headings":"","what":"Empirical data","title":"Data management","text":"Empirical data must provided comma-separated values (CSV) file path must specified set_controls(), see vignette specifying controls details.2 {fHMM} package comes two datasets Deutscher Aktienindex VW stock demonstration purpose can accessed follows: prepare_data() function prepares data based data controls specifications returns fHMM_data object can passed fit_model() function model fitting.","code":"system.file(\"extdata\", \"dax.csv\", package = \"fHMM\") #> [1] \"/Users/runner/work/_temp/Library/fHMM/extdata/dax.csv\" system.file(\"extdata\", \"vw.csv\", package = \"fHMM\") #> [1] \"/Users/runner/work/_temp/Library/fHMM/extdata/vw.csv\" controls <- list(   states = 3,   sdds   = \"t\",   data   = list(file        = system.file(\"extdata\", \"dax.csv\", package = \"fHMM\"),                 date_column = \"Date\",                 data_column = \"Close\",                 logreturns  = TRUE) ) controls <- set_controls(controls) data <- prepare_data(controls) summary(data) #> Summary of fHMM empirical data #> * number of observations: 8778  #> * data source: dax.csv  #> * date column: Date  #> * log returns: TRUE"},{"path":"https://loelschlaeger.github.io/fHMM/articles/v03_data_management.html","id":"download-stock-data","dir":"Articles","previous_headings":"","what":"Download stock data","title":"Data management","text":"Daily stock prices listed https://finance.yahoo.com/ can downloaded directly via symbol stock’s symbol match official symbol https://finance.yahoo.com,3 define time interval (format \"YYYY-MM-DD\"), file name file .csv-file saved. Per default, saved current working directory name <symbol>.csv. example, call downloads 21st century daily data DAX current working directory.","code":"download_data(symbol, from, to, file) download_data(symbol = \"^GDAXI\", from = \"2000-01-01\", to = Sys.Date()) #> Download successful. #> * symbol: ^GDAXI  #> * from: 2000-01-03  #> * to: 2022-04-06  #> * path: /Users/runner/work/fHMM/fHMM/vignettes/^GDAXI.csv"},{"path":"https://loelschlaeger.github.io/fHMM/articles/v03_data_management.html","id":"highlighting-events","dir":"Articles","previous_headings":"","what":"Highlighting events","title":"Data management","text":"Historical events can highlighted specifying named list events elements dates (vector dates) labels (vector labels events) passing plot method, example:","code":"events <- fHMM:::fHMM_events(   list(     dates = c(\"2001-09-11\",\"2008-09-15\",\"2020-01-27\"),     labels = c(\"9/11 terrorist attack\",\"Bankruptcy of Lehman Brothers\",\"First COVID-19 case in Germany\")     )   ) print(events) #>        dates                         labels #> 1 2001-09-11          9/11 terrorist attack #> 2 2008-09-15  Bankruptcy of Lehman Brothers #> 3 2020-01-27 First COVID-19 case in Germany plot(data, events = events)"},{"path":"https://loelschlaeger.github.io/fHMM/articles/v03_data_management.html","id":"simulated-data","dir":"Articles","previous_headings":"","what":"Simulated data","title":"Data management","text":"data parameter model’s controls unspecified, model fitted simulated data model specification. can useful testing functionality conducting simulation experiments. True model parameters can specified defining fHMM_parameters-object via fHMM_parameters() function passing prepare_data().","code":""},{"path":"https://loelschlaeger.github.io/fHMM/articles/v04_model_estimation.html","id":"likelihood-evaluation-using-the-forward-algorithm","dir":"Articles","previous_headings":"","what":"Likelihood evaluation using the forward algorithm","title":"Model estimation","text":"Deriving likelihood function hidden Markov model part hierarchical case, hence following discusses general case. HHMM can treated HMM two conditionally independent data streams; coarse-scale observations one hand corresponding chunk fine-scale observations connected fine-scale HMM hand. derive likelihood HHMM, start computing likelihood chunk fine-scale observations generated fine-scale HMM. fit \\(\\)-th fine-scale HMM, model parameters \\(\\theta^{*()}=(\\delta^{*()}, \\Gamma^{*()},(f^{*(,k)})_k)\\) \\(t\\)-th chunk fine-scale observations, denoted \\((X_{t,t^*})_{t^*}\\), consider fine-scale forward probabilities \\[\\begin{align*} \\alpha^{*()}_{k,t^*}=f^{*()}(X^*_{t,1},\\dots,X^*_{t,t^*}, S^*_{t,t^*}=k), \\end{align*}\\] \\(t^*=1,\\dots,T^*\\) \\(k=1,\\dots,N^*\\). Using fine-scale forward probabilities, fine-scale likelihoods can obtained law total probability \\[\\begin{align*} \\mathcal{L}^\\text{HMM}(\\theta^{*()}\\mid (X^*_{t,t^*})_{t^*})=\\sum_{k=1}^{N^*}\\alpha^{*()}_{k,T^*}. \\end{align*}\\] forward probabilities can calculated recursively \\[\\begin{align*} \\alpha^{*()}_{k,1} &= \\delta^{*()}_k f^{*(,k)}(X^*_{t,1}), \\\\ \\alpha^{*()}_{k,t^*} &= f^{*(,k)}(X^*_{t,t^*})\\sum_{j=1}^{N^*}\\gamma^{*()}_{jk}\\alpha^{*()}_{j,t^*-1}, \\quad t^*=2,\\dots,T^*. \\end{align*}\\] transition likelihood function HMM likelihood function HHMM straightforward: Consider coarse-scale forward probabilities \\[\\begin{align*} \\alpha_{,t}=f(X_1,\\dots,X_t,(X^*_{1,t^*})_{t^*},\\dots,(X^*_{t,t^*})_{t^*}, S_t=), \\end{align*}\\] \\(t=1,\\dots,T\\) \\(=1,\\dots,N\\). likelihood function HHMM results \\[\\begin{align*} \\mathcal{L}^\\text{HHMM}(\\theta,(\\theta^{*()})_i\\mid (X_t)_t,((X^*_{t,t^*})_{t^*})_t)=\\sum_{=1}^{N}\\alpha_{,T}. \\end{align*}\\] coarse-scale forward probabilities can calculated similarly applying recursive scheme \\[\\begin{align*} \\alpha_{,1} &= \\delta_i \\mathcal{L}^\\text{HMM}(\\theta^{*()}\\mid (X^*_{1,t^*})_{t^*})f^{()}(X_1), \\\\ \\alpha_{,t} &= \\mathcal{L}^\\text{HMM}(\\theta^{*()}\\mid (X^*_{t,t^*})_{t^*}) f^{()}(X_t)\\sum_{j=1}^{N}\\gamma_{ji}\\alpha_{j,t-1}, \\quad t=2,\\dots,T. \\end{align*}\\]","code":""},{"path":"https://loelschlaeger.github.io/fHMM/articles/v04_model_estimation.html","id":"challenges-associated-with-the-likelihood-maximization","dir":"Articles","previous_headings":"","what":"Challenges associated with the likelihood maximization","title":"Model estimation","text":"account parameter constraints associated transition probabilities (potentially parameters state-dependent distributions), use parameter transformations. ensure entries t.p.m.s fulfill non-negativity unity condition, estimate unconstrained values \\((\\eta_{ij})_{\\neq j}\\) non-diagonal entries \\(\\Gamma\\) derive probabilities using multinomial logit link \\[\\begin{align*} \\gamma_{ij}=\\frac{\\exp[\\eta_{ij}]}{1+\\sum_{k\\neq }\\exp[\\eta_{ik}]},~\\neq j \\end{align*}\\] rather estimating probabilities \\((\\gamma_{ij})_{,j}\\) directly. diagonal entries result unity condition \\[\\begin{align*} \\gamma_{ii}=1-\\sum_{j\\neq }\\gamma_{ij}. \\end{align*}\\] Furthermore, variances strictly positive, can achieved applying exponential transformation unconstrained estimator. numerically maximizing likelihood using Newton-Raphson-type method, often face numerical - overflow, can addressed maximizing logarithm likelihood incorporating constants conducive way (see Zucchini, MacDonald, Langrock (2016) Oelschläger Adam (2021) details). likelihood maximized respect relatively large number parameters, obtained maximum can local rather global one. avoid problem, recommended run maximization multiple times different, possibly randomly selected starting points, choose model corresponds highest likelihood (see Zucchini, MacDonald, Langrock (2016) Oelschläger Adam (2021) details).","code":""},{"path":"https://loelschlaeger.github.io/fHMM/articles/v04_model_estimation.html","id":"application","dir":"Articles","previous_headings":"","what":"Application","title":"Model estimation","text":"illustration, fit 3-state HMM state-dependent t-distributions DAX data prepared previous vignette data management: data object can directly passed fit_model() function numerically maximizes model’s (log-) likelihood function runs = 100 times.2 task can parallelized setting ncluster argument.3 estimated model saved {fHMM} package can accessed follows: Calling summary() method provides overview model fit, whereas coef() returns data frame estimated model coefficients: estimated state-dependent distributions can plotted follows:  mentioned , HMM likelihood function prone local optima. effect can visualized plotting log-likelihood value different optimization runs, best run marked red:","code":"controls <- list(   states = 3,   sdds   = \"t\",   data   = list(file        = system.file(\"extdata\", \"dax.csv\", package = \"fHMM\"),                 date_column = \"Date\",                 data_column = \"Close\",                 from        = \"2000-01-01\",                 to          = \"2021-12-31\",                 logreturns  = TRUE),   fit    = list(\"runs\" = 100) ) controls <- set_controls(controls) data <- prepare_data(controls) dax_model_3t <- fit_model(data, seed = 1, verbose = FALSE) data(dax_model_3t) summary(dax_model_3t) #> Summary of fHMM model #>  #>   simulated hierarchy       LL       AIC       BIC #> 1     FALSE     FALSE 16913.33 -33796.65 -33697.13 #>  #> State-dependent distributions: #> t()  #>  #> Estimates: #>                   lb   estimate        ub #> Gamma_2.1  1.394e-02  2.170e-02 3.357e-02 #> Gamma_3.1  1.710e-06  1.697e-06 1.671e-06 #> Gamma_1.2  1.659e-02  2.641e-02 4.179e-02 #> Gamma_3.2  9.359e-03  1.740e-02 3.213e-02 #> Gamma_1.3  1.259e-08  1.246e-08 1.227e-08 #> Gamma_2.3  2.790e-03  5.146e-03 9.431e-03 #> mu_1       9.610e-04  1.269e-03 1.576e-03 #> mu_2      -7.955e-04 -2.517e-04 2.920e-04 #> mu_3      -3.724e-03 -1.674e-03 3.765e-04 #> sigma_1    5.332e-03  5.774e-03 6.253e-03 #> sigma_2    1.269e-02  1.324e-02 1.381e-02 #> sigma_3    2.330e-02  2.563e-02 2.819e-02 #> df_1       3.964e+00  5.272e+00 7.012e+00 #> df_2       7.592e+04  7.593e+04 7.593e+04 #> df_3       5.501e+00  1.064e+01 2.058e+01 #>  #> States: #> decoded #>    1    2    3  #> 2177 2753  695  #>  #> Residuals: #>      Min.   1st Qu.    Median      Mean   3rd Qu.      Max.  #> -3.523637 -0.659763  0.010355 -0.002319  0.673969  3.918940 plot(dax_model_3t, plot_type = \"sdds\") plot(dax_model_3t, plot_type = \"ll\")"},{"path":"https://loelschlaeger.github.io/fHMM/articles/v04_model_estimation.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"Model estimation","text":"Oelschläger, L., T. Adam. 2021. “Detecting Bearish Bullish Markets Financial Time Series Using Hierarchical Hidden Markov Models.” Statistical Modelling. Zucchini, W., . L. MacDonald, R. Langrock. 2016. “Hidden Markov Models Time Series: Introduction Using R, 2nd Edition.” Chapman Hall/CRC.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/articles/v05_state_decoding_and_prediction.html","id":"state-decoding-using-the-viterbi-algorithm","dir":"Articles","previous_headings":"","what":"State decoding using the Viterbi algorithm","title":"State decoding and prediction","text":"financial markets, special interest infer underlying (hidden) states order gain insight actual market situation. Decoding full time series \\(S_1, \\ldots, S_T\\) called global decoding. Hereby, aim find likely trajectory hidden states estimated model. Global decoding can accomplished using -called Viterbi algorithm recursive scheme enabling find global maximum without confronted huge computational costs. end, follow Zucchini, MacDonald, Langrock (2016) define \\[\\zeta_{1i} = Pr(S_1 = , X_1 = x_1) = \\delta_i p_i(x_1)\\] \\(= 1, \\ldots, N\\) following \\(t = 2, \\ldots, T\\) \\[\\zeta_{ti} = \\operatorname*{max}_{s_1, \\ldots, s_{t-1}} Pr(S_{t-1} = s_{t-1}, S_t = , X_t = x_t).\\] , trajectory likely states \\(i_1, \\ldots, i_T\\) can calculated recursively \\[i_T = \\operatorname*{argmax}_{= 1, \\ldots, N} \\zeta_{Ti}\\] following \\(t = T-1, \\ldots, 1\\) \\[i_t = \\operatorname*{argmax}_{= 1, \\ldots, N} (\\zeta_{ti} \\gamma_{, i_{t+1}}).\\] Transferring state decoding HHMMs straightforward: first coarse-scale state process must decoded. Afterwards, using information fine-scale state process can decoded, see Adam et al. (2019).","code":""},{"path":"https://loelschlaeger.github.io/fHMM/articles/v05_state_decoding_and_prediction.html","id":"the-decode_states-function","dir":"Articles","previous_headings":"","what":"The decode_states() function","title":"State decoding and prediction","text":"revisit DAX model vignette model estimation: underlying states can decoded via decode_states() function: now can visualize decoded time series:  Mind model invariant permutations state labels. Therefore, {fHMM} provides option switch labels decoding via reorder_states() function, example:","code":"data(dax_model_3t) dax_model_3t <- decode_states(dax_model_3t) #> Decoded states plot(dax_model_3t) dax_model_3t <- reorder_states(dax_model_3t, 3:1)"},{"path":"https://loelschlaeger.github.io/fHMM/articles/v05_state_decoding_and_prediction.html","id":"prediction","dir":"Articles","previous_headings":"","what":"Prediction","title":"State decoding and prediction","text":"decoded underlying states, possible compute state probabilities next observations. Based probabilities combination estimated state-dependent distributions, next observations can predicted, compare Zucchini, MacDonald, Langrock (2016):","code":"predict(dax_model_3t, ahead = 10) #>    state_1 state_2 state_3       lb estimate      ub #> 1  0.00515 0.97315 0.02170 -0.02190 -0.00023 0.02145 #> 2  0.01006 0.94769 0.04225 -0.02179 -0.00020 0.02138 #> 3  0.01477 0.92354 0.06170 -0.02168 -0.00018 0.02132 #> 4  0.01926 0.90063 0.08011 -0.02158 -0.00016 0.02126 #> 5  0.02356 0.87890 0.09754 -0.02148 -0.00014 0.02121 #> 6  0.02767 0.85829 0.11403 -0.02140 -0.00012 0.02116 #> 7  0.03161 0.83874 0.12965 -0.02131 -0.00010 0.02111 #> 8  0.03537 0.82020 0.14442 -0.02124 -0.00008 0.02107 #> 9  0.03898 0.80261 0.15841 -0.02116 -0.00007 0.02103 #> 10 0.04243 0.78593 0.17164 -0.02110 -0.00005 0.02100"},{"path":"https://loelschlaeger.github.io/fHMM/articles/v05_state_decoding_and_prediction.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"State decoding and prediction","text":"Adam, T., C. . Griffiths, V. Leos-Barajas, E. N. Meese, C. G. Lowe, P. G. Blackwell, D. Righton, R. Langrock. 2019. “Joint Modelling Multi-Scale Animal Movement Data Using Hierarchical Hidden Markov Models.” Methods Ecology Evolution 10 (9): 1536–50. Zucchini, W., . L. MacDonald, R. Langrock. 2016. “Hidden Markov Models Time Series: Introduction Using R, 2nd Edition.” Chapman Hall/CRC.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/articles/v06_model_checking.html","id":"model-checking-using-pseudo-residuals","dir":"Articles","previous_headings":"","what":"Model checking using pseudo-residuals","title":"Model checking","text":"Analyzing pseudo-residuals allows us check whether fitted model describes data well. Since observations explained different distributions (depending active state), done analyzing standard residuals. transform observations common scale, proceed follows: \\(X_t\\) invertible distribution function \\(F_{X_t}\\), \\[\\begin{align*} Z_t=\\Phi^{-1}(F_{X_t} (X_t)) \\end{align*}\\] standard normally distributed, \\(\\Phi\\) denotes cumulative distribution function standard normal distribution. observations, \\((X_t)_t\\), modeled well -called pseudo-residuals, \\((Z_t)_t\\), approximately standard normally distributed, can visually assessed using quantile-quantile plots investigated using statistical tests Jarque-Bera test (Zucchini, MacDonald, Langrock 2016). HHMMs, first decode coarse-scale state process using Viterbi algorithm. Subsequently, assign coarse-scale observation distribution function fitted model perform transformation described . Using Viterbi-decoded coarse-scale states, treat fine-scale observations analogously.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/articles/v06_model_checking.html","id":"implementation-in-fhmm","dir":"Articles","previous_headings":"","what":"Implementation in {fHMM}","title":"Model checking","text":"{fHMM}, pseudo-residuals can computed via compute_residuals() function, provided states decoded beforehand. revisit DAX example: following line computes residuals saves model object: residuals can visualized follows:  additional normality tests, residuals can extracted model object. following lines exemplary perform Jarque–Bera test (Jarque Bera 1987):","code":"data(dax_model_3t) dax_model_3t <- compute_residuals(dax_model_3t) #> Computed residuals plot(dax_model_3t, plot_type = \"pr\") res <- dax_model_3t$residuals tseries::jarque.bera.test(res) #> Registered S3 method overwritten by 'quantmod': #>   method            from #>   as.zoo.data.frame zoo #>  #>  Jarque Bera Test #>  #> data:  res #> X-squared = 2.6542, df = 2, p-value = 0.2652"},{"path":"https://loelschlaeger.github.io/fHMM/articles/v06_model_checking.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"Model checking","text":"Jarque, C. M., . K. Bera. 1987. “Test Normality Observations Regression Residuals.” International Statistical Review / Revue Internationale de Statistique 55: 163–72. Zucchini, W., . L. MacDonald, R. Langrock. 2016. “Hidden Markov Models Time Series: Introduction Using R, 2nd Edition.” Chapman Hall/CRC.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/articles/v07_model_selection.html","id":"information-criteria","dir":"Articles","previous_headings":"","what":"Information criteria","title":"Model selection","text":"Common model selection tools information criteria, Akaike information criterion (AIC) Bayesian information criterion (BIC), aim finding compromise model fit model complexity. AIC defined \\[\\begin{align*} \\text{AIC} = - 2 \\log (\\mathcal{L}^\\text{(H)HMM}(\\theta,(\\theta^{*()})_i\\mid (X_t)_t,((X^*_{t,t^*})_{t^*})_t)) + 2 p, \\end{align*}\\] \\(p\\) denotes number parameters, BIC defined \\[\\begin{align*} \\text{BIC} = - 2 \\log (\\mathcal{L}^\\text{(H)HMM}(\\theta,(\\theta^{*()})_i\\mid (X_t)_t,((X^*_{t,t^*})_{t^*})_t)) + \\log(T) p, \\end{align*}\\] \\(T\\) number observations.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/articles/v07_model_selection.html","id":"challenges-associated-with-model-selection","dir":"Articles","previous_headings":"","what":"Challenges associated with model selection","title":"Model selection","text":"practice, however, information criteria often favor overly complex models. Real data typically exhibit structure can actually captured model. can case true state-dependent distributions complex fully modeled (rather simple) parametric distribution, certain temporal patterns neglected model formulation. Additional states may able capture structure, can lead increased goodness fit outweighs higher model complexity. However, models many states difficult interpret therefore often desired, information criteria treaten caution considered rough guidance. -depth discussion pitfalls, practical challenges, pragmatic solutions regarding model selection, see Pohle et al. (2017).","code":""},{"path":"https://loelschlaeger.github.io/fHMM/articles/v07_model_selection.html","id":"the-compare_models-function","dir":"Articles","previous_headings":"","what":"The compare_models() function","title":"Model selection","text":"{fHMM} package provides convenient tool comparing different models via compare_models() function. models (arbitrarily many) can directly passed compare_models() function returns overview model selection criteria. , compare 2-state HMM normal state-dependent distributions 3-state HMM state-dependent t-distributions DAX data, complex model clearly preferred:","code":"data(dax_model_2n) data(dax_model_3t) compare_models(dax_model_2n, dax_model_3t) #>              parameters log-likelihood       AIC       BIC #> dax_model_2n          6       16681.98 -33351.96 -33312.15 #> dax_model_3t         15       16913.33 -33796.65 -33697.13"},{"path":"https://loelschlaeger.github.io/fHMM/articles/v07_model_selection.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"Model selection","text":"Pohle, J., R. Langrock, F. M. van Beest, N. M. Schmidt. 2017. “Selecting Number States Hidden Markov Models: Pragmatic Solutions Illustrated Using Animal Movement.” Journal Agricultural, Biological Environmental Statistics 22 (3): 270–93.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Lennart Oelschläger. Author, maintainer. Timo Adam. Author. Rouven Michels. Author.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Oelschläger L, Adam T, Michels R (2022). fHMM: Fitting Hidden Markov Models Financial Data. R package version 1.0.0.9000, https://loelschlaeger.de/fHMM/.","code":"@Manual{,   title = {fHMM: Fitting Hidden Markov Models to Financial Data},   author = {Lennart Oelschläger and Timo Adam and Rouven Michels},   year = {2022},   note = {R package version 1.0.0.9000},   url = {https://loelschlaeger.de/fHMM/}, }"},{"path":"https://loelschlaeger.github.io/fHMM/index.html","id":"fhmm-fitting-hmms-to-financial-time-series-","dir":"","previous_headings":"","what":"Fit hidden Markov models to financial data","title":"Fit hidden Markov models to financial data","text":"{fHMM} can detect bearish bullish markets financial time series applying Hidden Markov Models (HMMs). functionality model documented detail . , can find first application German stock index DAX.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Fit hidden Markov models to financial data","text":"can install released version {fHMM} CRAN :","code":"install.packages(\"fHMM\")"},{"path":"https://loelschlaeger.github.io/fHMM/index.html","id":"contributing","dir":"","previous_headings":"","what":"Contributing","title":"Fit hidden Markov models to financial data","text":"welcome contributions! Please submit bug reports feature requests issues extensions pull request branch created main.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/index.html","id":"example-fitting-an-hmm-to-the-dax","dir":"","previous_headings":"","what":"Example: Fitting an HMM to the DAX","title":"Fit hidden Markov models to financial data","text":"fit 2-state HMM state-dependent t-distributions DAX log-returns 2000 2020. states can interpreted proxies bearish bullish markets. package build-function download data Yahoo Finance: first need define model setting controls: function prepare_data() prepares data estimation: fit model subsequently decode hidden states: estimated model, can visualize state-dependent distributions decoded time series interpret bearish bullish markets:","code":"path <- paste0(tempdir(),\"/dax.csv\") download_data(symbol = \"^GDAXI\", file = path, verbose = FALSE) controls <- list(   states = 2,   sdds   = \"t\",   data   = list(file        = path,                 date_column = \"Date\",                 data_column = \"Close\",                 logreturns  = TRUE,                 from        = \"2000-01-01\",                 to          = \"2020-12-31\") ) controls <- set_controls(controls) data <- prepare_data(controls) summary(data) #> Summary of fHMM empirical data #> * number of observations: 5371  #> * data source: dax.csv  #> * date column: Date  #> * log returns: TRUE model <- fit_model(data, ncluster = 7) #> Checking start values #> Maximizing likelihood #> Computing Hessian #> Fitting completed model <- decode_states(model) #> Decoded states summary(model) #> Summary of fHMM model #>  #>   simulated hierarchy       LL      AIC       BIC #> 1     FALSE     FALSE 15920.25 -31824.5 -31771.79 #>  #> State-dependent distributions: #> t()  #>  #> Estimates: #>                   lb   estimate         ub #> Gamma_2.1  0.0113550  0.0179502  2.827e-02 #> Gamma_1.2  0.0056213  0.0089654  1.427e-02 #> mu_1       0.0005939  0.0009008  1.208e-03 #> mu_2      -0.0020763 -0.0010611 -4.585e-05 #> sigma_1    0.0073792  0.0078062  8.258e-03 #> sigma_2    0.0170391  0.0184230  1.992e-02 #> df_1       5.0194906  6.4223618  8.217e+00 #> df_2       4.9532404  6.6609735  8.957e+00 #>  #> States: #> decoded #>    1    2  #> 3645 1726 events <- fHMM_events(   list(dates = c(\"2001-09-11\", \"2008-09-15\", \"2020-01-27\"),        labels = c(\"9/11 terrorist attack\", \"Bankruptcy Lehman Brothers\", \"First COVID-19 case Germany\")) ) plot(model, plot_type = c(\"sdds\",\"ts\"), events = events)"},{"path":"https://loelschlaeger.github.io/fHMM/reference/Gamma2delta.html","id":null,"dir":"Reference","previous_headings":"","what":"This function computes the stationary distribution of a transition\nprobability matrix Gamma. — Gamma2delta","title":"This function computes the stationary distribution of a transition\nprobability matrix Gamma. — Gamma2delta","text":"function computes stationary distribution transition probability matrix Gamma.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/Gamma2delta.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This function computes the stationary distribution of a transition\nprobability matrix Gamma. — Gamma2delta","text":"","code":"Gamma2delta(Gamma)"},{"path":"https://loelschlaeger.github.io/fHMM/reference/Gamma2delta.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"This function computes the stationary distribution of a transition\nprobability matrix Gamma. — Gamma2delta","text":"Gamma transition probability matrix.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/Gamma2delta.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"This function computes the stationary distribution of a transition\nprobability matrix Gamma. — Gamma2delta","text":"stationary distribution vector.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/Gamma2delta.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"This function computes the stationary distribution of a transition\nprobability matrix Gamma. — Gamma2delta","text":"stationary distribution vector computed, set discrete uniform distribution states.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/Gamma2gammasCon.html","id":null,"dir":"Reference","previous_headings":"","what":"This function constrains the non-diagonal matrix elements of a transition\nprobability matrix Gamma. — Gamma2gammasCon","title":"This function constrains the non-diagonal matrix elements of a transition\nprobability matrix Gamma. — Gamma2gammasCon","text":"function constrains non-diagonal matrix elements transition probability matrix Gamma.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/Gamma2gammasCon.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This function constrains the non-diagonal matrix elements of a transition\nprobability matrix Gamma. — Gamma2gammasCon","text":"","code":"Gamma2gammasCon(Gamma, shift = 0.001)"},{"path":"https://loelschlaeger.github.io/fHMM/reference/Gamma2gammasCon.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"This function constrains the non-diagonal matrix elements of a transition\nprobability matrix Gamma. — Gamma2gammasCon","text":"Gamma transition probability matrix. shift numeric value shifting boundary probabilities.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/Gamma2gammasCon.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"This function constrains the non-diagonal matrix elements of a transition\nprobability matrix Gamma. — Gamma2gammasCon","text":"vector constrained non-diagonal matrix elements (column-wise).","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/Gamma2gammasUncon.html","id":null,"dir":"Reference","previous_headings":"","what":"This function un-constrains the non-diagonal matrix elements of a transition\nprobability matrix Gamma. — Gamma2gammasUncon","title":"This function un-constrains the non-diagonal matrix elements of a transition\nprobability matrix Gamma. — Gamma2gammasUncon","text":"function un-constrains non-diagonal matrix elements transition probability matrix Gamma.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/Gamma2gammasUncon.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This function un-constrains the non-diagonal matrix elements of a transition\nprobability matrix Gamma. — Gamma2gammasUncon","text":"","code":"Gamma2gammasUncon(Gamma)"},{"path":"https://loelschlaeger.github.io/fHMM/reference/Gamma2gammasUncon.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"This function un-constrains the non-diagonal matrix elements of a transition\nprobability matrix Gamma. — Gamma2gammasUncon","text":"Gamma transition probability matrix.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/Gamma2gammasUncon.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"This function un-constrains the non-diagonal matrix elements of a transition\nprobability matrix Gamma. — Gamma2gammasUncon","text":"vector un-constrained non-diagonal matrix elements (column-wise).","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/check_date.html","id":null,"dir":"Reference","previous_headings":"","what":"Check date format ","title":"Check date format ","text":"function checks input date format \"YYYY-MM-DD\".","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/check_date.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check date format ","text":"","code":"check_date(date)"},{"path":"https://loelschlaeger.github.io/fHMM/reference/check_date.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check date format ","text":"date character, specifying date format \"YYYY-MM-DD\".","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/check_date.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check date format ","text":".Date(date) date format \"YYYY-MM-DD\". Otherwise, function throws error.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/check_date.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check date format ","text":"","code":"fHMM:::check_date(date = \"2000-01-01\") #> [1] \"2000-01-01\""},{"path":"https://loelschlaeger.github.io/fHMM/reference/coef.fHMM_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Model coefficients — coef.fHMM_model","title":"Model coefficients — coef.fHMM_model","text":"function returns estimated model coefficients alpha confidence interval.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/coef.fHMM_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Model coefficients — coef.fHMM_model","text":"","code":"# S3 method for fHMM_model coef(object, alpha = 0.05, ...)"},{"path":"https://loelschlaeger.github.io/fHMM/reference/coef.fHMM_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Model coefficients — coef.fHMM_model","text":"object object class fHMM_model. alpha alpha level confidence interval, numeric 0 1. Per default, alpha = 0.05, computes 95% confidence interval. ... Ignored.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/coef.fHMM_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Model coefficients — coef.fHMM_model","text":"data frame.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/compare_models.html","id":null,"dir":"Reference","previous_headings":"","what":"Comparing multiple fHMM_model-objects — compare_models","title":"Comparing multiple fHMM_model-objects — compare_models","text":"function compares multiple fHMM_model respect number model parameters, log-likelihood value, AIC value, BIC value.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/compare_models.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Comparing multiple fHMM_model-objects — compare_models","text":"","code":"compare_models(...)"},{"path":"https://loelschlaeger.github.io/fHMM/reference/compare_models.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Comparing multiple fHMM_model-objects — compare_models","text":"... list one objects class fHMM_model.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/compare_models.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Comparing multiple fHMM_model-objects — compare_models","text":"data frame models rows comparison criteria columns.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/compare_models.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Comparing multiple fHMM_model-objects — compare_models","text":"","code":"data(dax_model_3t) compare_models(dax_model_3t) #>              parameters log-likelihood       AIC       BIC #> dax_model_3t         15       16913.33 -33796.65 -33697.13"},{"path":"https://loelschlaeger.github.io/fHMM/reference/compute_T_star.html","id":null,"dir":"Reference","previous_headings":"","what":"Computing lengths of fine-scale chunks — compute_T_star","title":"Computing lengths of fine-scale chunks — compute_T_star","text":"function computes lengths fine-scale chunks.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/compute_T_star.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Computing lengths of fine-scale chunks — compute_T_star","text":"","code":"compute_T_star(horizon, period, dates = NULL, seed = NULL)"},{"path":"https://loelschlaeger.github.io/fHMM/reference/compute_T_star.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Computing lengths of fine-scale chunks — compute_T_star","text":"horizon element controls$horizon, .e. integer vector length 2, second entry can NA. period element controls$period, .e. one \"w\", \"m\", code\"q\", \"y\". dates vector dates empirical fine-scale data. seed Set seed simulation flexible chunk lengths.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/compute_T_star.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Computing lengths of fine-scale chunks — compute_T_star","text":"vector fine-scale chunk sizes.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/compute_T_star.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Computing lengths of fine-scale chunks — compute_T_star","text":"","code":"### weekly fine-scale chunk sizes for 10 coarse-scale observations horizon <- c(10, NA) period <- \"w\" fHMM:::compute_T_star(horizon, period) #>  [1] 5 5 4 5 4 5 5 4 4 5"},{"path":"https://loelschlaeger.github.io/fHMM/reference/compute_ci.html","id":null,"dir":"Reference","previous_headings":"","what":"Computing confidence intervals — compute_ci","title":"Computing confidence intervals — compute_ci","text":"function computes confidence intervals estimates fHMM_model object using inverse Fisher information.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/compute_ci.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Computing confidence intervals — compute_ci","text":"","code":"compute_ci(x, alpha = 0.05)"},{"path":"https://loelschlaeger.github.io/fHMM/reference/compute_ci.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Computing confidence intervals — compute_ci","text":"x object class fHMM_model. alpha alpha level confidence interval, numeric 0 1. Per default, alpha = 0.05, computes 95% confidence interval.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/compute_ci.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Computing confidence intervals — compute_ci","text":"list containing following elements: lb: lower bound confidence estimate: point estimate ub: upper bound confidence","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/compute_ci.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Computing confidence intervals — compute_ci","text":"","code":"data(dax_model_3t) fHMM:::compute_ci(x = dax_model_3t, alpha = 0.05) #> $lb #>  [1]  1.393745e-02  1.710420e-06  1.659146e-02  9.359401e-03  1.258535e-08 #>  [6]  2.789877e-03  9.610235e-04 -7.955275e-04 -3.723796e-03  5.332119e-03 #> [11]  1.269075e-02  2.329677e-02  3.964154e+00  7.592272e+04  5.501298e+00 #> attr(,\"class\") #> [1] \"parCon\" #>  #> $estimate #>  [1]  2.170056e-02  1.696596e-06  2.641008e-02  1.740175e-02  1.246159e-08 #>  [6]  5.145960e-03  1.268712e-03 -2.517499e-04 -1.673649e-03  5.774343e-03 #> [11]  1.323801e-02  2.562622e-02  5.272157e+00  7.592547e+04  1.064107e+01 #> attr(,\"class\") #> [1] \"parCon\" #>  #> $ub #>  [1] 3.357222e-02 1.671225e-06 4.179228e-02 3.213059e-02 1.226657e-08 #>  [6] 9.431251e-03 1.576400e-03 2.920278e-04 3.764982e-04 6.253244e-03 #> [11] 1.380887e-02 2.818860e-02 7.011747e+00 7.592821e+04 2.058285e+01 #> attr(,\"class\") #> [1] \"parCon\" #>"},{"path":"https://loelschlaeger.github.io/fHMM/reference/compute_residuals.html","id":null,"dir":"Reference","previous_headings":"","what":"Computing (pseudo-) residuals — compute_residuals","title":"Computing (pseudo-) residuals — compute_residuals","text":"function computes (pseudo-) residuals fHMM_model object.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/compute_residuals.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Computing (pseudo-) residuals — compute_residuals","text":"","code":"compute_residuals(x, verbose = TRUE)"},{"path":"https://loelschlaeger.github.io/fHMM/reference/compute_residuals.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Computing (pseudo-) residuals — compute_residuals","text":"x object class fHMM_model. verbose Set TRUE print progress messages.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/compute_residuals.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Computing (pseudo-) residuals — compute_residuals","text":"object class fHMM_model residuals included.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/compute_residuals.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Computing (pseudo-) residuals — compute_residuals","text":"","code":"data(dax_model_3t) compute_residuals(dax_model_3t) #> Computed residuals #> fHMM fitted model: #> * total estimation time: 7 mins  #> * accepted runs: 21 of 100  #> * log-likelihood: 16913.33"},{"path":"https://loelschlaeger.github.io/fHMM/reference/dax_model_2n.html","id":null,"dir":"Reference","previous_headings":"","what":"DAX 2-state HMM — dax_model_2n","title":"DAX 2-state HMM — dax_model_2n","text":"pre-computed HMM closing prices DAX 2000 2021 two hidden states normal state-dependent distributions demonstration purpose.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/dax_model_2n.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DAX 2-state HMM — dax_model_2n","text":"","code":"data(dax_model_2n)"},{"path":"https://loelschlaeger.github.io/fHMM/reference/dax_model_2n.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"DAX 2-state HMM — dax_model_2n","text":"object class fHMM_model.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/dax_model_2n.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"DAX 2-state HMM — dax_model_2n","text":"model derived via specifying","code":"controls <- list(   states = 2,   sdds   = \"t(df = Inf)\",   data   = list(file        = system.file(\"extdata\", \"dax.csv\", package = \"fHMM\"),                 date_column = \"Date\",                 data_column = \"Close\",                 logreturns  = TRUE,                 from        = \"2000-01-03\",                 to          = \"2021-12-31\"),   fit    = list(\"runs\" = 100)   )"},{"path":"https://loelschlaeger.github.io/fHMM/reference/dax_model_3t.html","id":null,"dir":"Reference","previous_headings":"","what":"DAX 3-state HMM — dax_model_3t","title":"DAX 3-state HMM — dax_model_3t","text":"pre-computed HMM closing prices DAX 2000 2021 three hidden states state-dependent t-distributions demonstration purpose.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/dax_model_3t.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DAX 3-state HMM — dax_model_3t","text":"","code":"data(dax_model_3t)"},{"path":"https://loelschlaeger.github.io/fHMM/reference/dax_model_3t.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"DAX 3-state HMM — dax_model_3t","text":"object class fHMM_model.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/dax_model_3t.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"DAX 3-state HMM — dax_model_3t","text":"model derived via specifying","code":"controls <- list(   states = 3,   sdds   = \"t\",   data   = list(file        = system.file(\"extdata\", \"dax.csv\", package = \"fHMM\"),                 date_column = \"Date\",                 data_column = \"Close\",                 logreturns  = TRUE,                 from        = \"2000-01-03\",                 to          = \"2021-12-31\"),   fit    = list(\"runs\" = 100)   )"},{"path":"https://loelschlaeger.github.io/fHMM/reference/dax_vw_model.html","id":null,"dir":"Reference","previous_headings":"","what":"DAX/VW hierarchical HMM — dax_vw_model","title":"DAX/VW hierarchical HMM — dax_vw_model","text":"pre-computed HHMM monthly averaged closing prices DAX 2000 2021 coarse scale, VW stock data fine scale, two hidden fine-scale coarse-scale states, respectively, state-dependent t-distributions degrees freedom fixed 1 demonstration purpose.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/dax_vw_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DAX/VW hierarchical HMM — dax_vw_model","text":"","code":"data(dax_vw_model)"},{"path":"https://loelschlaeger.github.io/fHMM/reference/dax_vw_model.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"DAX/VW hierarchical HMM — dax_vw_model","text":"object class fHMM_model.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/dax_vw_model.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"DAX/VW hierarchical HMM — dax_vw_model","text":"model derived via specifying","code":"controls <- list(   hierarchy = TRUE,   states    = c(2,2),   sdds      = c(\"t(df = 1)\", \"t(df = 1)\"),   period    = \"m\",   data      = list(file = c(system.file(\"extdata\", \"dax.csv\", package = \"fHMM\"),                             system.file(\"extdata\", \"vw.csv\", package = \"fHMM\")),                    from = \"2015-01-01\",                    to = \"2020-01-01\",                    logreturns = c(TRUE,TRUE)),   fit       = list(\"runs\" = 100) )"},{"path":"https://loelschlaeger.github.io/fHMM/reference/decode_states.html","id":null,"dir":"Reference","previous_headings":"","what":"Decoding the underlying hidden state sequence — decode_states","title":"Decoding the underlying hidden state sequence — decode_states","text":"function decodes (likely) underlying hidden state sequence applying Viterbi algorithm.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/decode_states.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Decoding the underlying hidden state sequence — decode_states","text":"","code":"decode_states(x, verbose = TRUE)"},{"path":"https://loelschlaeger.github.io/fHMM/reference/decode_states.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Decoding the underlying hidden state sequence — decode_states","text":"x object class fHMM_model. verbose Set TRUE print progress messages.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/decode_states.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Decoding the underlying hidden state sequence — decode_states","text":"object class fHMM_model decoded state sequence included.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/decode_states.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Decoding the underlying hidden state sequence — decode_states","text":"https://en.wikipedia.org/wiki/Viterbi_algorithm","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/decode_states.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Decoding the underlying hidden state sequence — decode_states","text":"","code":"data(dax_model_3t) decode_states(dax_model_3t) #> Decoded states #> fHMM fitted model: #> * total estimation time: 7 mins  #> * accepted runs: 21 of 100  #> * log-likelihood: 16913.33"},{"path":"https://loelschlaeger.github.io/fHMM/reference/dfCon2dfUncon.html","id":null,"dir":"Reference","previous_headings":"","what":"This function un-constrains the constrained degrees of freedom dfCon. — dfCon2dfUncon","title":"This function un-constrains the constrained degrees of freedom dfCon. — dfCon2dfUncon","text":"function un-constrains constrained degrees freedom dfCon.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/dfCon2dfUncon.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This function un-constrains the constrained degrees of freedom dfCon. — dfCon2dfUncon","text":"","code":"dfCon2dfUncon(dfCon)"},{"path":"https://loelschlaeger.github.io/fHMM/reference/dfCon2dfUncon.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"This function un-constrains the constrained degrees of freedom dfCon. — dfCon2dfUncon","text":"dfCon vector constrained degrees freedom.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/dfCon2dfUncon.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"This function un-constrains the constrained degrees of freedom dfCon. — dfCon2dfUncon","text":"vector un-constrained degrees freedom.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/dfUncon2dfCon.html","id":null,"dir":"Reference","previous_headings":"","what":"This function constrains the un-constrained degrees of freedom dfUncon. — dfUncon2dfCon","title":"This function constrains the un-constrained degrees of freedom dfUncon. — dfUncon2dfCon","text":"function constrains un-constrained degrees freedom dfUncon.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/dfUncon2dfCon.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This function constrains the un-constrained degrees of freedom dfUncon. — dfUncon2dfCon","text":"","code":"dfUncon2dfCon(dfUncon)"},{"path":"https://loelschlaeger.github.io/fHMM/reference/dfUncon2dfCon.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"This function constrains the un-constrained degrees of freedom dfUncon. — dfUncon2dfCon","text":"dfUncon vector un-constrained degrees freedom.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/dfUncon2dfCon.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"This function constrains the un-constrained degrees of freedom dfUncon. — dfUncon2dfCon","text":"vector constrained degrees freedom.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/download_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Downloading financial data — download_data","title":"Downloading financial data — download_data","text":"function downloads stock data https://www.yahoo.com/finance saves .csv-file.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/download_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Downloading financial data — download_data","text":"","code":"download_data(   symbol,   from = \"1902-01-01\",   to = Sys.Date(),   file = paste0(symbol, \".csv\"),   verbose = TRUE )"},{"path":"https://loelschlaeger.github.io/fHMM/reference/download_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Downloading financial data — download_data","text":"symbol character, stock's symbol. must match identifier https://finance.yahoo.com. date format \"YYYY-MM-DD\", setting lower data bound. Must earlier \"1902-01-01\". date format \"YYYY-MM-DD\", setting upper data bound. Default current date Sys.date(). file name file .csv-file saved. Per default, saved current working directory name \"symbol.csv\". verbose TRUE returns information download success.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/download_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Downloading financial data — download_data","text":"return value.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/download_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Downloading financial data — download_data","text":"downloaded data .csv-file following columns: Date: date. Open: Opening price. High: Highest price. Low: Lowest price. Close: Close price adjusted splits. Adj.Close: Close price adjusted dividends splits. Volume: Trade volume.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/download_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Downloading financial data — download_data","text":"","code":"### download 21st century DAX data download_data(   symbol = \"^GDAXI\", from = \"2000-01-03\",   file = paste0(tempfile(), \".csv\") ) #> Download successful. #> * symbol: ^GDAXI  #> * from: 2000-01-03  #> * to: 2022-04-06  #> * path: /private/var/folders/24/8k48jl6d249_n_qfxwsl6xvm0000gn/T/RtmpOnS6fC/filebeb1fc2497f.csv"},{"path":"https://loelschlaeger.github.io/fHMM/reference/fHMM.html","id":null,"dir":"Reference","previous_headings":"","what":"fHMM: An R package for fitting hidden Markov models to financial data — fHMM","title":"fHMM: An R package for fitting hidden Markov models to financial data — fHMM","text":"package provides tools modeling financial data via (hierarchical) hidden Markov model.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/fHMM_colors.html","id":null,"dir":"Reference","previous_headings":"","what":"Setting color scheme for visualizations — fHMM_colors","title":"Setting color scheme for visualizations — fHMM_colors","text":"function defines color scheme visualizations fHMM package.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/fHMM_colors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Setting color scheme for visualizations — fHMM_colors","text":"","code":"fHMM_colors(controls, colors = NULL)"},{"path":"https://loelschlaeger.github.io/fHMM/reference/fHMM_colors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Setting color scheme for visualizations — fHMM_colors","text":"controls object class fHMM_controls. colors Either NULL character vector color names hexadecimal RGB triplets.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/fHMM_colors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Setting color scheme for visualizations — fHMM_colors","text":"object class fHMM_colors, : controls$hierarchy == FALSE vector length controls$states color codes, controls$hierarchy == TRUE list vector length  controls$states[1] matrix dimensions controls$states color codes.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/fHMM_colors.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Setting color scheme for visualizations — fHMM_colors","text":"","code":"controls <- set_controls() fHMM:::fHMM_colors(controls, colors = c(\"red\", \"blue\")) #> [1] \"#FF000099\" \"#0000FF99\" #> attr(,\"class\") #> [1] \"fHMM_colors\""},{"path":"https://loelschlaeger.github.io/fHMM/reference/fHMM_events.html","id":null,"dir":"Reference","previous_headings":"","what":"Checking events — fHMM_events","title":"Checking events — fHMM_events","text":"function checks input events.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/fHMM_events.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Checking events — fHMM_events","text":"","code":"fHMM_events(events)"},{"path":"https://loelschlaeger.github.io/fHMM/reference/fHMM_events.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Checking events — fHMM_events","text":"events list two elements. first element named \"dates\" contains characters format \"YYYY-MM-DD\". second element named \"labels\" character vector length \"dates\".","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/fHMM_events.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Checking events — fHMM_events","text":"object class fHMM_events.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/fHMM_events.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Checking events — fHMM_events","text":"","code":"events <- list(   dates = c(\"2001-09-11\", \"2008-09-15\", \"2020-01-27\"),   labels = c(     \"9/11 terrorist attack\", \"Bankruptcy Lehman Brothers\",     \"First COVID-19 case Germany\"   ) ) events <- fHMM_events(events)"},{"path":"https://loelschlaeger.github.io/fHMM/reference/fHMM_parameters.html","id":null,"dir":"Reference","previous_headings":"","what":"Setting and checking model parameters — fHMM_parameters","title":"Setting and checking model parameters — fHMM_parameters","text":"function sets checks model parameters fHMM package.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/fHMM_parameters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Setting and checking model parameters — fHMM_parameters","text":"","code":"fHMM_parameters(   controls,   Gamma = NULL,   mus = NULL,   sigmas = NULL,   dfs = NULL,   Gammas_star = NULL,   mus_star = NULL,   sigmas_star = NULL,   dfs_star = NULL,   seed = NULL,   scale_par = c(1, 1) )"},{"path":"https://loelschlaeger.github.io/fHMM/reference/fHMM_parameters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Setting and checking model parameters — fHMM_parameters","text":"controls object class fHMM_controls. Gamma tpm (transition probability matrix) dimension controls$states[1]. mus vector expectations length controls$states[1]. sigmas vector standard deviations length controls$states[1]. dfs vector degrees freedom length controls$states[1]. relevant sdd t-distribution. Gammas_star list length controls$states[1] (fine-scale) tpm's. tpm must dimension controls$states[2]. mus_star list length controls$states[1] vectors (fine-scale) expectations. vector must length controls$states[2]. sigmas_star list length controls$states[1] vectors standard deviations. vector must length controls$states[2]. dfs_star list length controls$states[1] vectors (fine-scale) degrees freedom. vector must length controls$states[2]. relevant sdd t-distribution. seed Set seed sampling parameters. scale_par positive numeric vector length two, containing scales sampled expectations standard deviations. first entry scale mus sigmas, second entry scale mus_star sigmas_star. Set entry 1 scaling.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/fHMM_parameters.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Setting and checking model parameters — fHMM_parameters","text":"object class fHMM_parameters.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/fHMM_parameters.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Setting and checking model parameters — fHMM_parameters","text":"See vignette model definition details.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/fHMM_parameters.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Setting and checking model parameters — fHMM_parameters","text":"","code":"controls <- set_controls() fHMM_parameters(controls) #> fHMM parameters"},{"path":"https://loelschlaeger.github.io/fHMM/reference/fHMM_sdds.html","id":null,"dir":"Reference","previous_headings":"","what":"Defining state-dependent distributions — fHMM_sdds","title":"Defining state-dependent distributions — fHMM_sdds","text":"function defines state-dependent distributions fHMM package.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/fHMM_sdds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Defining state-dependent distributions — fHMM_sdds","text":"","code":"fHMM_sdds(sdds)"},{"path":"https://loelschlaeger.github.io/fHMM/reference/fHMM_sdds.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Defining state-dependent distributions — fHMM_sdds","text":"sdds character character vector length two can specified \"sdds\" set_controls.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/fHMM_sdds.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Defining state-dependent distributions — fHMM_sdds","text":"list length length(sdds). element list, containing \"name\" distribution list \"pars\" parameters. Unknown parameters set NULL.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/fHMM_sdds.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Defining state-dependent distributions — fHMM_sdds","text":"","code":"sdds <- c(\"t(sigma = 0.1, df = Inf)\", \"gamma\") fHMM:::fHMM_sdds(sdds) #> t(sigma = 0.1, df = Inf) gamma()"},{"path":"https://loelschlaeger.github.io/fHMM/reference/fit_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Model fitting — fit_model","title":"Model fitting — fit_model","text":"function fits HMM data via maximum likelihood estimation.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/fit_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Model fitting — fit_model","text":"","code":"fit_model(data, ncluster = 1, seed = NULL, verbose = TRUE, init = NULL)"},{"path":"https://loelschlaeger.github.io/fHMM/reference/fit_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Model fitting — fit_model","text":"data object class fHMM_data. ncluster Set number clusters parallelization. seed Set seed sampling initial values. verbose Set TRUE print progress messages. init Optionally object class parUncon initialization. can example estimate previously fitted model model, .e. element model$estimate. initial values computed via replicate(n, jitter(init, amount = 1), simplify = FALSE), n <- data$controls$fit$runs.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/fit_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Model fitting — fit_model","text":"object class fHMM_model.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/fit_model.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Model fitting — fit_model","text":"function parallelized ncluster > 1. experience problems OS, try set ncluster <- 1.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/gammasCon2Gamma.html","id":null,"dir":"Reference","previous_headings":"","what":"This function builds a transition probability matrix of dimension dim\nfrom constrained non-diagonal elements gammasCon. — gammasCon2Gamma","title":"This function builds a transition probability matrix of dimension dim\nfrom constrained non-diagonal elements gammasCon. — gammasCon2Gamma","text":"function builds transition probability matrix dimension dim constrained non-diagonal elements gammasCon.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/gammasCon2Gamma.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This function builds a transition probability matrix of dimension dim\nfrom constrained non-diagonal elements gammasCon. — gammasCon2Gamma","text":"","code":"gammasCon2Gamma(gammasCon, dim)"},{"path":"https://loelschlaeger.github.io/fHMM/reference/gammasCon2Gamma.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"This function builds a transition probability matrix of dimension dim\nfrom constrained non-diagonal elements gammasCon. — gammasCon2Gamma","text":"gammasCon vector constrained non-diagonal elements transition probability matrix. dim dimension transition probability matrix.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/gammasCon2Gamma.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"This function builds a transition probability matrix of dimension dim\nfrom constrained non-diagonal elements gammasCon. — gammasCon2Gamma","text":"transition probability matrix.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/gammasCon2gammasUncon.html","id":null,"dir":"Reference","previous_headings":"","what":"This function un-constrains the constrained non-diagonal elements\ngammasCon of a transition probability matrix of dimension dim. — gammasCon2gammasUncon","title":"This function un-constrains the constrained non-diagonal elements\ngammasCon of a transition probability matrix of dimension dim. — gammasCon2gammasUncon","text":"function un-constrains constrained non-diagonal elements gammasCon transition probability matrix dimension dim.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/gammasCon2gammasUncon.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This function un-constrains the constrained non-diagonal elements\ngammasCon of a transition probability matrix of dimension dim. — gammasCon2gammasUncon","text":"","code":"gammasCon2gammasUncon(gammasCon, dim)"},{"path":"https://loelschlaeger.github.io/fHMM/reference/gammasCon2gammasUncon.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"This function un-constrains the constrained non-diagonal elements\ngammasCon of a transition probability matrix of dimension dim. — gammasCon2gammasUncon","text":"gammasCon vector constrained non-diagonal elements transition probability matrix. dim dimension transition probability matrix.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/gammasCon2gammasUncon.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"This function un-constrains the constrained non-diagonal elements\ngammasCon of a transition probability matrix of dimension dim. — gammasCon2gammasUncon","text":"vector un-constrained non-diagonal elements transition probability matrix.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/gammasUncon2Gamma.html","id":null,"dir":"Reference","previous_headings":"","what":"This function builds a transition probability matrix from un-constrained\nnon-diagonal elements gammasUncon. — gammasUncon2Gamma","title":"This function builds a transition probability matrix from un-constrained\nnon-diagonal elements gammasUncon. — gammasUncon2Gamma","text":"function builds transition probability matrix un-constrained non-diagonal elements gammasUncon.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/gammasUncon2Gamma.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This function builds a transition probability matrix from un-constrained\nnon-diagonal elements gammasUncon. — gammasUncon2Gamma","text":"","code":"gammasUncon2Gamma(gammasUncon, dim)"},{"path":"https://loelschlaeger.github.io/fHMM/reference/gammasUncon2Gamma.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"This function builds a transition probability matrix from un-constrained\nnon-diagonal elements gammasUncon. — gammasUncon2Gamma","text":"gammasUncon vector un-constrained non-diagonal elements transition probability matrix. dim dimension transition probability matrix.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/gammasUncon2Gamma.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"This function builds a transition probability matrix from un-constrained\nnon-diagonal elements gammasUncon. — gammasUncon2Gamma","text":"transition probability matrix.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/gammasUncon2gammasCon.html","id":null,"dir":"Reference","previous_headings":"","what":"This function constrains non-diagonal elements gammasUncon of a\ntransition probability matrix. — gammasUncon2gammasCon","title":"This function constrains non-diagonal elements gammasUncon of a\ntransition probability matrix. — gammasUncon2gammasCon","text":"function constrains non-diagonal elements gammasUncon transition probability matrix.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/gammasUncon2gammasCon.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This function constrains non-diagonal elements gammasUncon of a\ntransition probability matrix. — gammasUncon2gammasCon","text":"","code":"gammasUncon2gammasCon(gammasUncon, dim)"},{"path":"https://loelschlaeger.github.io/fHMM/reference/gammasUncon2gammasCon.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"This function constrains non-diagonal elements gammasUncon of a\ntransition probability matrix. — gammasUncon2gammasCon","text":"gammasUncon vector un-constrained non-diagonal elements transition probability matrix. dim dimension transition probability matrix.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/gammasUncon2gammasCon.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"This function constrains non-diagonal elements gammasUncon of a\ntransition probability matrix. — gammasUncon2gammasCon","text":"vector constrained non-diagonal elements transition probability matrix.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/is_number.html","id":null,"dir":"Reference","previous_headings":"","what":"Check for integers — is_number","title":"Check for integers — is_number","text":"function checks x ((non)-negative) ((non-)positive) (integer) numeric (vector).","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/is_number.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check for integers — is_number","text":"","code":"is_number(   x,   int = FALSE,   neg = FALSE,   non_neg = FALSE,   pos = FALSE,   non_pos = FALSE )"},{"path":"https://loelschlaeger.github.io/fHMM/reference/is_number.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check for integers — is_number","text":"x R object. int boolean, TRUE checks x integer. neg boolean, TRUE checks x negative. non_neg boolean, TRUE checks x non-negative. pos boolean, TRUE checks x positive. non_pos boolean, TRUE checks x non-positive.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/is_number.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check for integers — is_number","text":"boolean.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/is_number.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check for integers — is_number","text":"","code":"fHMM:::is_number(1, int = TRUE) #> [1] TRUE fHMM:::is_number(pi, int = TRUE) #> [1] FALSE"},{"path":"https://loelschlaeger.github.io/fHMM/reference/is_tpm.html","id":null,"dir":"Reference","previous_headings":"","what":"Check for tpm — is_tpm","title":"Check for tpm — is_tpm","text":"function checks x tpm (transition probability matrix).","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/is_tpm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check for tpm — is_tpm","text":"","code":"is_tpm(x)"},{"path":"https://loelschlaeger.github.io/fHMM/reference/is_tpm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check for tpm — is_tpm","text":"x matrix.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/is_tpm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check for tpm — is_tpm","text":"boolean.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/is_tpm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check for tpm — is_tpm","text":"","code":"fHMM:::is_tpm(diag(2)) #> [1] TRUE fHMM:::is_tpm(matrix(1, 2, 2)) #> [1] FALSE"},{"path":"https://loelschlaeger.github.io/fHMM/reference/match_all.html","id":null,"dir":"Reference","previous_headings":"","what":"Best-possible match of two numeric vectors — match_all","title":"Best-possible match of two numeric vectors — match_all","text":"function matches positions two numeric vectors good possible.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/match_all.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Best-possible match of two numeric vectors — match_all","text":"","code":"match_all(x, y)"},{"path":"https://loelschlaeger.github.io/fHMM/reference/match_all.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Best-possible match of two numeric vectors — match_all","text":"x numeric vector. y Another numeric vector length x.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/match_all.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Best-possible match of two numeric vectors — match_all","text":"integer vector length length(x) positions yin x.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/match_all.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Best-possible match of two numeric vectors — match_all","text":"","code":"x <- c(-1, 0, 1) y <- c(0.1, 2, -1.2) fHMM:::match_all(x = x, y = y) #> [1] 2 3 1"},{"path":"https://loelschlaeger.github.io/fHMM/reference/muCon2muUncon.html","id":null,"dir":"Reference","previous_headings":"","what":"This function un-constrains the constrained expected values muCon. — muCon2muUncon","title":"This function un-constrains the constrained expected values muCon. — muCon2muUncon","text":"function un-constrains constrained expected values muCon.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/muCon2muUncon.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This function un-constrains the constrained expected values muCon. — muCon2muUncon","text":"","code":"muCon2muUncon(muCon, link)"},{"path":"https://loelschlaeger.github.io/fHMM/reference/muCon2muUncon.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"This function un-constrains the constrained expected values muCon. — muCon2muUncon","text":"muCon vector constrained expected values. link boolean, determining whether apply link function.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/muCon2muUncon.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"This function un-constrains the constrained expected values muCon. — muCon2muUncon","text":"vector un-constrained expected values.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/muUncon2muCon.html","id":null,"dir":"Reference","previous_headings":"","what":"This function constrains the un-constrained expected values muUncon. — muUncon2muCon","title":"This function constrains the un-constrained expected values muUncon. — muUncon2muCon","text":"function constrains un-constrained expected values muUncon.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/muUncon2muCon.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This function constrains the un-constrained expected values muUncon. — muUncon2muCon","text":"","code":"muUncon2muCon(muUncon, link)"},{"path":"https://loelschlaeger.github.io/fHMM/reference/muUncon2muCon.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"This function constrains the un-constrained expected values muUncon. — muUncon2muCon","text":"muUncon vector un-constrained expected values. link boolean, determining whether apply link function.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/muUncon2muCon.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"This function constrains the un-constrained expected values muUncon. — muUncon2muCon","text":"vector constrained expected values.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/nLL_hhmm.html","id":null,"dir":"Reference","previous_headings":"","what":"Negative log-likelihood function of an HHMM — nLL_hhmm","title":"Negative log-likelihood function of an HHMM — nLL_hhmm","text":"function computes negative log-likelihood HHMM.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/nLL_hhmm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Negative log-likelihood function of an HHMM — nLL_hhmm","text":"","code":"nLL_hhmm(parUncon, observations, controls)"},{"path":"https://loelschlaeger.github.io/fHMM/reference/nLL_hhmm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Negative log-likelihood function of an HHMM — nLL_hhmm","text":"parUncon object class parUncon. observations matrix simulated empirical data used estimation. controls object class fHMM_controls.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/nLL_hhmm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Negative log-likelihood function of an HHMM — nLL_hhmm","text":"negative log-likelihood value.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/nLL_hmm.html","id":null,"dir":"Reference","previous_headings":"","what":"Negative log-likelihood function of an HMM — nLL_hmm","title":"Negative log-likelihood function of an HMM — nLL_hmm","text":"function computes negative log-likelihood HMM.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/nLL_hmm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Negative log-likelihood function of an HMM — nLL_hmm","text":"","code":"nLL_hmm(parUncon, observations, controls)"},{"path":"https://loelschlaeger.github.io/fHMM/reference/nLL_hmm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Negative log-likelihood function of an HMM — nLL_hmm","text":"parUncon object class parUncon. observations vector simulated empirical data used estimation. controls object class fHMM_controls.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/nLL_hmm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Negative log-likelihood function of an HMM — nLL_hmm","text":"negative log-likelihood value.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/par2parCon.html","id":null,"dir":"Reference","previous_headings":"","what":"This function transforms an object of class fHMM_parameters into an\nobject of class parCon. — par2parCon","title":"This function transforms an object of class fHMM_parameters into an\nobject of class parCon. — par2parCon","text":"function transforms object class fHMM_parameters object class parCon.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/par2parCon.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This function transforms an object of class fHMM_parameters into an\nobject of class parCon. — par2parCon","text":"","code":"par2parCon(par, controls)"},{"path":"https://loelschlaeger.github.io/fHMM/reference/par2parCon.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"This function transforms an object of class fHMM_parameters into an\nobject of class parCon. — par2parCon","text":"par object class fHMM_parameters. controls object classfHMM_controls.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/par2parCon.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"This function transforms an object of class fHMM_parameters into an\nobject of class parCon. — par2parCon","text":"object class parCon.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/par2parUncon.html","id":null,"dir":"Reference","previous_headings":"","what":"This function transforms an object of class fHMM_parameters into\nan object of class parUncon. — par2parUncon","title":"This function transforms an object of class fHMM_parameters into\nan object of class parUncon. — par2parUncon","text":"function transforms object class fHMM_parameters object class parUncon.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/par2parUncon.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This function transforms an object of class fHMM_parameters into\nan object of class parUncon. — par2parUncon","text":"","code":"par2parUncon(par, controls)"},{"path":"https://loelschlaeger.github.io/fHMM/reference/par2parUncon.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"This function transforms an object of class fHMM_parameters into\nan object of class parUncon. — par2parUncon","text":"par object class fHMM_parameters. controls object class fHMM_controls.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/par2parUncon.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"This function transforms an object of class fHMM_parameters into\nan object of class parUncon. — par2parUncon","text":"object class parUncon, .e. vector unconstrained model parameters estimated.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/parCon2par.html","id":null,"dir":"Reference","previous_headings":"","what":"This function transforms an object of class parCon into an object\nof class fHMM_parameters. — parCon2par","title":"This function transforms an object of class parCon into an object\nof class fHMM_parameters. — parCon2par","text":"function transforms object class parCon object class fHMM_parameters.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/parCon2par.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This function transforms an object of class parCon into an object\nof class fHMM_parameters. — parCon2par","text":"","code":"parCon2par(parCon, controls)"},{"path":"https://loelschlaeger.github.io/fHMM/reference/parCon2par.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"This function transforms an object of class parCon into an object\nof class fHMM_parameters. — parCon2par","text":"parCon object class parCon. controls object class fHMM_controls.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/parCon2par.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"This function transforms an object of class parCon into an object\nof class fHMM_parameters. — parCon2par","text":"object class fHMM_parameters.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/parCon2parUncon.html","id":null,"dir":"Reference","previous_headings":"","what":"This function transforms an object of class parCon into an\nobject of class parUncon. — parCon2parUncon","title":"This function transforms an object of class parCon into an\nobject of class parUncon. — parCon2parUncon","text":"function transforms object class parCon object class parUncon.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/parCon2parUncon.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This function transforms an object of class parCon into an\nobject of class parUncon. — parCon2parUncon","text":"","code":"parCon2parUncon(parCon, controls)"},{"path":"https://loelschlaeger.github.io/fHMM/reference/parCon2parUncon.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"This function transforms an object of class parCon into an\nobject of class parUncon. — parCon2parUncon","text":"parCon object class parCon. controls object class fHMM_controls.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/parCon2parUncon.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"This function transforms an object of class parCon into an\nobject of class parUncon. — parCon2parUncon","text":"object class parUncon.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/parUncon2par.html","id":null,"dir":"Reference","previous_headings":"","what":"This function transforms an object of class parUncon into an\nobject of class fHMM_parameters. — parUncon2par","title":"This function transforms an object of class parUncon into an\nobject of class fHMM_parameters. — parUncon2par","text":"function transforms object class parUncon object class fHMM_parameters.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/parUncon2par.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This function transforms an object of class parUncon into an\nobject of class fHMM_parameters. — parUncon2par","text":"","code":"parUncon2par(parUncon, controls)"},{"path":"https://loelschlaeger.github.io/fHMM/reference/parUncon2par.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"This function transforms an object of class parUncon into an\nobject of class fHMM_parameters. — parUncon2par","text":"parUncon object class parUncon. controls object class fHMM_controls.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/parUncon2par.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"This function transforms an object of class parUncon into an\nobject of class fHMM_parameters. — parUncon2par","text":"object class fHMM_parameters.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/parUncon2parCon.html","id":null,"dir":"Reference","previous_headings":"","what":"This function transforms an object of class parUncon into an object\nof class parCon. — parUncon2parCon","title":"This function transforms an object of class parUncon into an object\nof class parCon. — parUncon2parCon","text":"function transforms object class parUncon object class parCon.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/parUncon2parCon.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This function transforms an object of class parUncon into an object\nof class parCon. — parUncon2parCon","text":"","code":"parUncon2parCon(parUncon, controls)"},{"path":"https://loelschlaeger.github.io/fHMM/reference/parUncon2parCon.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"This function transforms an object of class parUncon into an object\nof class parCon. — parUncon2parCon","text":"parUncon object class parUncon. controls object class fHMM_controls.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/parUncon2parCon.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"This function transforms an object of class parUncon into an object\nof class parCon. — parUncon2parCon","text":"object class parCon, .e. vector constrained model parameters estimated.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/parameter_labels.html","id":null,"dir":"Reference","previous_headings":"","what":"Create labels for estimated parameters — parameter_labels","title":"Create labels for estimated parameters — parameter_labels","text":"function creates labels estimated HMM parameters.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/parameter_labels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create labels for estimated parameters — parameter_labels","text":"","code":"parameter_labels(controls, expected_length)"},{"path":"https://loelschlaeger.github.io/fHMM/reference/parameter_labels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create labels for estimated parameters — parameter_labels","text":"controls object class fHMM_controls. expected_length expected output length.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/parameter_labels.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create labels for estimated parameters — parameter_labels","text":"character vector parameter labels.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/parameter_labels.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create labels for estimated parameters — parameter_labels","text":"","code":"fHMM:::parameter_labels(set_controls(), 8) #> [1] \"Gamma_2.1\" \"Gamma_1.2\" \"mu_1\"      \"mu_2\"      \"sigma_1\"   \"sigma_2\"   #> [7] \"df_1\"      \"df_2\""},{"path":"https://loelschlaeger.github.io/fHMM/reference/plot.fHMM_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot method for an object of class fHMM_data — plot.fHMM_data","title":"Plot method for an object of class fHMM_data — plot.fHMM_data","text":"function plot method object class fHMM_data.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/plot.fHMM_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot method for an object of class fHMM_data — plot.fHMM_data","text":"","code":"# S3 method for fHMM_data plot(x, events = NULL, ...)"},{"path":"https://loelschlaeger.github.io/fHMM/reference/plot.fHMM_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot method for an object of class fHMM_data — plot.fHMM_data","text":"x object class fHMM_data. events Either NULL object class fHMM_events. ... Ignored.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/plot.fHMM_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot method for an object of class fHMM_data — plot.fHMM_data","text":"return value. Draws plot current device.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/plot.fHMM_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot method for an object of class fHMM_model — plot.fHMM_model","title":"Plot method for an object of class fHMM_model — plot.fHMM_model","text":"function plot method object class fHMM_model.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/plot.fHMM_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot method for an object of class fHMM_model — plot.fHMM_model","text":"","code":"# S3 method for fHMM_model plot(x, plot_type = \"ts\", events = NULL, colors = NULL, ...)"},{"path":"https://loelschlaeger.github.io/fHMM/reference/plot.fHMM_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot method for an object of class fHMM_model — plot.fHMM_model","text":"x object class fHMM_model. plot_type character (vector), specifying type plot can one () \"ll\" visualization likelihood values different optimization runs, \"sdds\" visualization estimated state-dependent distributions, \"pr\" visualization model's (pseudo-) residuals, \"ts\" visualization financial time series. events object class fHMM_events. colors Either NULL character vector color names hexadecimal RGB triplets. ... Ignored.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/plot.fHMM_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot method for an object of class fHMM_model — plot.fHMM_model","text":"return value. Draws plot current device.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/plot_ll.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualization of log-likelihood values — plot_ll","title":"Visualization of log-likelihood values — plot_ll","text":"function plots log-likelihood values different estimation runs.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/plot_ll.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualization of log-likelihood values — plot_ll","text":"","code":"plot_ll(lls)"},{"path":"https://loelschlaeger.github.io/fHMM/reference/plot_ll.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualization of log-likelihood values — plot_ll","text":"lls numeric vector log-likelihood values.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/plot_ll.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualization of log-likelihood values — plot_ll","text":"return value. Draws plot current device.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/plot_pr.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualize pseudo residuals — plot_pr","title":"Visualize pseudo residuals — plot_pr","text":"function visualizes pseudo residuals.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/plot_pr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualize pseudo residuals — plot_pr","text":"","code":"plot_pr(residuals, hierarchy)"},{"path":"https://loelschlaeger.github.io/fHMM/reference/plot_pr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualize pseudo residuals — plot_pr","text":"residuals object class fHMM_residuals. hierarchy element controls$hierarchy.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/plot_pr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualize pseudo residuals — plot_pr","text":"return value. Draws plot current device.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/plot_sdds.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualization of estimated state-dependent distributions — plot_sdds","title":"Visualization of estimated state-dependent distributions — plot_sdds","text":"function plots estimated state-dependent distributions.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/plot_sdds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualization of estimated state-dependent distributions — plot_sdds","text":"","code":"plot_sdds(est, true = NULL, controls, colors)"},{"path":"https://loelschlaeger.github.io/fHMM/reference/plot_sdds.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualization of estimated state-dependent distributions — plot_sdds","text":"est object class fHMM_parameters estimated parameters. true Either NULL object class fHMM_parameters true parameters. controls object class fHMM_controls. colors object class fHMM_colors.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/plot_sdds.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualization of estimated state-dependent distributions — plot_sdds","text":"return value. Draws plot current device.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/plot_ts.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualize time series — plot_ts","title":"Visualize time series — plot_ts","text":"function visualizes data time series.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/plot_ts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualize time series — plot_ts","text":"","code":"plot_ts(data, decoding, colors, events)"},{"path":"https://loelschlaeger.github.io/fHMM/reference/plot_ts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualize time series — plot_ts","text":"data object class fHMM_data. decoding Either NULL object class fHMM_decoding. colors Either NULL object class fHMM_colors. Ignored decoding = NULL. events Either NULL object class fHMM_events.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/plot_ts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualize time series — plot_ts","text":"return value. Draws plot current device.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/predict.fHMM_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Prediction — predict.fHMM_model","title":"Prediction — predict.fHMM_model","text":"function predicts next ahead states data points based fHMM_model object.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/predict.fHMM_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prediction — predict.fHMM_model","text":"","code":"# S3 method for fHMM_model predict(object, ahead = 5, alpha = 0.05, ...)"},{"path":"https://loelschlaeger.github.io/fHMM/reference/predict.fHMM_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prediction — predict.fHMM_model","text":"object object class fHMM_model. ahead positive integer, forecast horizon. alpha alpha level confidence interval, numeric 0 1. Per default, alpha = 0.05, computes 95% confidence interval. ... Ignored.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/predict.fHMM_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prediction — predict.fHMM_model","text":"data frame state probabilities data point estimates along confidence intervals.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/predict.fHMM_model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prediction — predict.fHMM_model","text":"","code":"data(dax_model_3t) predict(dax_model_3t) #>   state_1 state_2 state_3       lb estimate      ub #> 1 0.02170 0.97315 0.00515 -0.02190 -0.00023 0.02145 #> 2 0.04225 0.94769 0.01006 -0.02179 -0.00020 0.02138 #> 3 0.06170 0.92354 0.01477 -0.02168 -0.00018 0.02132 #> 4 0.08011 0.90063 0.01926 -0.02158 -0.00016 0.02126 #> 5 0.09754 0.87890 0.02356 -0.02148 -0.00014 0.02121"},{"path":"https://loelschlaeger.github.io/fHMM/reference/prepare_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare data — prepare_data","title":"Prepare data — prepare_data","text":"function simulates reads financial data fHMM package.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/prepare_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare data — prepare_data","text":"","code":"prepare_data(controls, true_parameters = NULL, seed = NULL)"},{"path":"https://loelschlaeger.github.io/fHMM/reference/prepare_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare data — prepare_data","text":"controls object class fHMM_controls. true_parameters object class fHMM_parameters, used simulation parameters. seed Set seed data simulation.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/prepare_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare data — prepare_data","text":"object class fHMM_data, list containing following elements: matrix dates simulated = FALSE controls$data$data_column specified, matrix time_points simulated = TRUE controls$data$data_column specified, matrix simulated markov_chain simulated = TRUE, matrix simulated empirical data used estimation, matrix time_series empirical data transformation log-returns simulated = FALSE, vector fine-scale chunk sizes T_star controls$hierarchy = TRUE, input controls, true_parameters.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/prepare_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prepare data — prepare_data","text":"","code":"controls <- set_controls() prepare_data(controls) #> fHMM simulated data"},{"path":"https://loelschlaeger.github.io/fHMM/reference/read_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Read data — read_data","title":"Read data — read_data","text":"function reads financial data fHMM package.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/read_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read data — read_data","text":"","code":"read_data(controls)"},{"path":"https://loelschlaeger.github.io/fHMM/reference/read_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read data — read_data","text":"controls object class fHMM_controls.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/read_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read data — read_data","text":"list containing following elements: matrix dates controls$simulated = FALSE controls$data$data_column specified, matrix time_points controls$simulated = TRUE controls$data$data_column specified, matrix empirical data used estimation, matrix time_series empirical data transformation log-returns, vector fine-scale chunk sizes T_star controls$hierarchy = TRUE.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/reorder_states.html","id":null,"dir":"Reference","previous_headings":"","what":"Reordering of estimated states — reorder_states","title":"Reordering of estimated states — reorder_states","text":"function reorders estimated states, can useful comparison true parameters interpretation states.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/reorder_states.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reordering of estimated states — reorder_states","text":"","code":"reorder_states(x, state_order)"},{"path":"https://loelschlaeger.github.io/fHMM/reference/reorder_states.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reordering of estimated states — reorder_states","text":"x object class fHMM_model. state_order vector matrix determines new ordering. x$data$controls$hierarchy = FALSE, state_order must vector length x$data$controls$states integer values 1 x$data$controls$states. old state number x new state number y, put value x position y state_order. E.g. 2-state HMM, specifying state_order = c(2,1) swaps states. x$data$controls$hierarchy = TRUE, state_order must matrix dimension x$data$controls$states[1] x x$data$controls$states[2] + 1. first column orders coarse-scale states logic described . row, elements second last position order fine-scale states coarse-scale state specified first element. E.g. HHMM 2 coarse-scale 2 fine-scale states, specifying state_order = matrix(c(2,1,2,1,1,2),2,3) swaps coarse-scale states fine-scale states coarse-scale state 2.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/reorder_states.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reordering of estimated states — reorder_states","text":"object class fHMM_model, states reordered.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/reorder_states.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reordering of estimated states — reorder_states","text":"","code":"data(dax_model_3t) reorder_states(dax_model_3t, state_order = 3:1) #> fHMM fitted model: #> * total estimation time: 7 mins  #> * accepted runs: 21 of 100  #> * log-likelihood: 16913.33"},{"path":"https://loelschlaeger.github.io/fHMM/reference/sample_tpm.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample transition probability matrices — sample_tpm","title":"Sample transition probability matrices — sample_tpm","text":"function returns random, squared matrix dimension dim fulfills properties transition probability matrix.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/sample_tpm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample transition probability matrices — sample_tpm","text":"","code":"sample_tpm(dim)"},{"path":"https://loelschlaeger.github.io/fHMM/reference/sample_tpm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sample transition probability matrices — sample_tpm","text":"dim matrix dimension.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/sample_tpm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sample transition probability matrices — sample_tpm","text":"transition probability matrix.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/sample_tpm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sample transition probability matrices — sample_tpm","text":"","code":"fHMM:::sample_tpm(dim = 3) #>           [,1]      [,2]      [,3] #> [1,] 0.2442257 0.3777926 0.3779816 #> [2,] 0.3058963 0.4090159 0.2850878 #> [3,] 0.4488337 0.1262310 0.4249353"},{"path":"https://loelschlaeger.github.io/fHMM/reference/set_controls.html","id":null,"dir":"Reference","previous_headings":"","what":"Set and check controls — set_controls","title":"Set and check controls — set_controls","text":"function sets checks specification controls fHMM package.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/set_controls.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set and check controls — set_controls","text":"","code":"set_controls(controls = NULL)"},{"path":"https://loelschlaeger.github.io/fHMM/reference/set_controls.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set and check controls — set_controls","text":"controls list controls. Either none, , selected parameters can specified. Unspecified parameters set default values (values brackets). hierarchy = TRUE, parameters (*) must vector length 2, first entry corresponds coarse-scale second entry fine-scale layer. hierarchy (FALSE): boolean, set TRUE hierarchical HMM. states (*) (2): number states underlying Markov chain. sdds (*) (\"t(df = Inf)\"): Specifying state-dependent distribution, one \"t\" (t-distribution) \"gamma\" (gamma distribution). fix one parameter values, write e.g. \"t(df = Inf)\" \"gamma(mu = 0, sigma = 1)\", respectively. fix different values one parameter different states, separate \"|\", e.g. \"t(mu = -1|1)\". horizon (*) (100): numeric, specifying length time horizon. first entry horizon ignored data specified. period (\"m\"): relevant hierarchy = TRUE horizon[2] = NA. case, specifies flexible, periodic fine-scale time horizon can one \"w\" week, \"m\" month, \"q\" quarter, \"y\" year. data (NA): list controls specifying data. data = NA, data gets simulated. Otherwise: file (*): character, path .csv-file financial data, must column named date_column (dates) data_column (financial data). date_column (*) (\"Date\"): character, name column file dates. Can NA case consecutive integers used time points. data_column (*) (\"Close\"): character, name column file financial data. (NA): character format \"YYYY-MM-DD\", setting lower data limit. lower limit = NA. Ignored controls$data$date_column NA. (NA): character format \"YYYY-MM-DD\", setting upper data limit. upper limit = NA. Ignored controls$data$date_column NA. logreturns (*) (FALSE): boolean, TRUE data transformed log-returns. merge (function(x) mean(x)): relevant hierarchy = TRUE. case, function, merges numeric vector fine-scale data x one coarse-scale observation. example, merge = function(x) mean(x) defines mean fine-scale data coarse-scale observation, merge = function(x) mean(abs(x)) mean absolute values, merge = function(x) (abs(x)) sum absolute values, merge = function(x) (tail(x,1)-head(x,1))/head(x,1) relative change first last fine-scale observation. fit: list controls specifying model fitting: runs (100): integer, setting number optimization runs. origin (FALSE): boolean, TRUE optimization initialized true parameter values. simulated data. origin = TRUE, sets run = 1 accept = 1:5. accept (1:3): integer (vector), specifying optimization runs accepted based output code nlm. gradtol (1e-6): positive numeric value, passed nlm. iterlim (200): positive integer, passed nlm. print.level (0): One 0, 1, 2, passed nlm. steptol (1e-6): positive numeric value, passed nlm.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/set_controls.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set and check controls — set_controls","text":"object class fHMM_controls.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/set_controls.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Set and check controls — set_controls","text":"See vignettes information specify controls.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/set_controls.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set and check controls — set_controls","text":"","code":"### HMM controls controls <- list(   states  = 2,   sdds    = \"t(mu = 0, sigma = 1, df = 1)\",   horizon = 400,   fit     = list(\"runs\" = 50) ) set_controls(controls) #> fHMM controls: #> * hierarchy: FALSE  #> * data type: simulated  #> * number of states: 2  #> * sdds: t(mu = 0, sigma = 1, df = 1)  #> * number of runs: 50    ### HHMM controls controls <- list(   hierarchy = TRUE ) set_controls(controls) #> fHMM controls: #> * hierarchy: TRUE  #> * data type: simulated  #> * number of states: 2 2  #> * sdds: t() t()  #> * number of runs: 100"},{"path":"https://loelschlaeger.github.io/fHMM/reference/sigmaCon2sigmaUncon.html","id":null,"dir":"Reference","previous_headings":"","what":"This function un-constrains the constrained standard deviations\nsigmaCon. — sigmaCon2sigmaUncon","title":"This function un-constrains the constrained standard deviations\nsigmaCon. — sigmaCon2sigmaUncon","text":"function un-constrains constrained standard deviations sigmaCon.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/sigmaCon2sigmaUncon.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This function un-constrains the constrained standard deviations\nsigmaCon. — sigmaCon2sigmaUncon","text":"","code":"sigmaCon2sigmaUncon(sigmaCon)"},{"path":"https://loelschlaeger.github.io/fHMM/reference/sigmaCon2sigmaUncon.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"This function un-constrains the constrained standard deviations\nsigmaCon. — sigmaCon2sigmaUncon","text":"sigmaCon vector constrained standard deviations.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/sigmaCon2sigmaUncon.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"This function un-constrains the constrained standard deviations\nsigmaCon. — sigmaCon2sigmaUncon","text":"vector un-constrained standard deviations.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/sigmaUncon2sigmaCon.html","id":null,"dir":"Reference","previous_headings":"","what":"This function constrains the un-constrained standard deviations\nsigmaUncon. — sigmaUncon2sigmaCon","title":"This function constrains the un-constrained standard deviations\nsigmaUncon. — sigmaUncon2sigmaCon","text":"function constrains un-constrained standard deviations sigmaUncon.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/sigmaUncon2sigmaCon.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This function constrains the un-constrained standard deviations\nsigmaUncon. — sigmaUncon2sigmaCon","text":"","code":"sigmaUncon2sigmaCon(sigmaUncon)"},{"path":"https://loelschlaeger.github.io/fHMM/reference/sigmaUncon2sigmaCon.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"This function constrains the un-constrained standard deviations\nsigmaUncon. — sigmaUncon2sigmaCon","text":"sigmaUncon vector un-constrained standard deviations.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/sigmaUncon2sigmaCon.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"This function constrains the un-constrained standard deviations\nsigmaUncon. — sigmaUncon2sigmaCon","text":"vector constrained standard deviations.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/simulate_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate data — simulate_data","title":"Simulate data — simulate_data","text":"function simulates data fHMM package.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/simulate_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate data — simulate_data","text":"","code":"simulate_data(controls, true_parameters, seed = NULL)"},{"path":"https://loelschlaeger.github.io/fHMM/reference/simulate_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate data — simulate_data","text":"controls object class fHMM_controls. true_parameters object class fHMM_parameters, used simulation parameters. seed Set seed data simulation.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/simulate_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate data — simulate_data","text":"list containing following elements: matrix time_points, matrix simulated markov_chain, matrix simulated data, vector fine-scale chunk sizes T_star controls$hierarchy = TRUE.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/simulate_markov_chain.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate a Markov chain — simulate_markov_chain","title":"Simulate a Markov chain — simulate_markov_chain","text":"function simulates Markov chain.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/simulate_markov_chain.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate a Markov chain — simulate_markov_chain","text":"","code":"simulate_markov_chain(   Gamma,   T,   delta = Gamma2delta(Gamma),   seed = NULL,   total_length = T )"},{"path":"https://loelschlaeger.github.io/fHMM/reference/simulate_markov_chain.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate a Markov chain — simulate_markov_chain","text":"Gamma tpm (transition probability matrix). T length Markov chain. delta probability vector, initial distribution. specified, delta set stationary distribution vector. seed Set seed. total_length integer, total length output vector. Must greater equal T.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/simulate_markov_chain.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate a Markov chain — simulate_markov_chain","text":"numeric vector length T states.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/simulate_markov_chain.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulate a Markov chain — simulate_markov_chain","text":"","code":"Gamma <- matrix(c(0.5, 0.3, 0.5, 0.7), 2, 2) T <- 10 fHMM:::simulate_markov_chain(Gamma = Gamma, T = T) #>  [1] 2 1 2 1 1 1 2 2 2 2"},{"path":"https://loelschlaeger.github.io/fHMM/reference/simulate_observations.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate state-dependent observations — simulate_observations","title":"Simulate state-dependent observations — simulate_observations","text":"function simulates state-dependent observations.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/simulate_observations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate state-dependent observations — simulate_observations","text":"","code":"simulate_observations(   markov_chain,   sdd,   mus,   sigmas,   dfs = NULL,   seed = NULL,   total_length = length(markov_chain) )"},{"path":"https://loelschlaeger.github.io/fHMM/reference/simulate_observations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate state-dependent observations — simulate_observations","text":"markov_chain numeric vector states Markov chain. sdd name state-dependent distribution, one \"t\" \"gamma\". mus vector expected values. sigmas vector standard deviations. dfs vector degrees freedom (relevant sdd = \"t\"). seed Set seed. total_length integer, total length output vector. Must greater equal length(markov_chain).","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/simulate_observations.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate state-dependent observations — simulate_observations","text":"numeric vector length total_length, first length(markov_chain) elements numeric values last total_length - length(markov_chain) elements NA.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/news/index.html","id":"fhmm-1009000","dir":"Changelog","previous_headings":"","what":"fHMM 1.0.0.9000","title":"fHMM 1.0.0.9000","text":"vignette ‘Controls’, section example specifications controls, corrected sdds = \"gamma(mu = -1|1)\" sdds = \"gamma(mu = 0.5|2)\" mean Gamma distribution must positive. Added digits argument print.fHMM_predict(). Fixed bug reorder_states() allowed misspecification state_order. Added option fit_model() initialize estimates another model (#73).","code":""},{"path":"https://loelschlaeger.github.io/fHMM/news/index.html","id":"fhmm-100","dir":"Changelog","previous_headings":"","what":"fHMM 1.0.0","title":"fHMM 1.0.0","text":"CRAN release: 2022-03-14 Enhanced package S3 classes. Added controls specifications. Included prediction function. Improved documentations.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/news/index.html","id":"fhmm-030","dir":"Changelog","previous_headings":"","what":"fHMM 0.3.0","title":"fHMM 0.3.0","text":"CRAN release: 2021-06-16 Added vignettes. Improved specification controls. Created package start-message. Fixed minor bugs.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/news/index.html","id":"fhmm-020","dir":"Changelog","previous_headings":"","what":"fHMM 0.2.0","title":"fHMM 0.2.0","text":"CRAN release: 2021-03-13 Improved documentation functions README. Improved specification controls. (#37 #38)","code":""},{"path":"https://loelschlaeger.github.io/fHMM/news/index.html","id":"fhmm-010","dir":"Changelog","previous_headings":"","what":"fHMM 0.1.0","title":"fHMM 0.1.0","text":"CRAN release: 2021-02-22 Initial version.","code":""}]
