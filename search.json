[{"path":"https://loelschlaeger.github.io/fHMM/articles/fHMM.html","id":"motivation","dir":"Articles","previous_headings":"","what":"Motivation","title":"Introduction","text":"Earning money stock trading simple: one needs buy sell stocks right moment. general, stock traders seek invest beginning upward trends (hereon termed bullish markets) repel stocks just time prices fall (hereon termed bearish markets). stock prices depend variety environmental factors (Humpe Macmillan 2009; Cohen, Diether, Malloy 2013), chance certainly plays fundamental role hitting exact moments. However, investigating market behavior can lead better understanding trends alternate thereby increases chance making profitable investment decisions. fHMM package aims contributing investigations applying hidden Markov models detect bearish bullish markets financial time series. also implemented hierarchical extension presented (Oelschläger Adam 2021), improves model’s capability distinguishing short- long-term trends allows interpret market dynamics multiple time scales.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/articles/fHMM.html","id":"package-and-vignettes-overview","dir":"Articles","previous_headings":"","what":"Package and vignettes overview","title":"Introduction","text":"functionality fHMM package can classified functions data preparation, model estimation, model evaluation. flowchart visualizes dependencies. flowchart fHMM package. Functions displayed boxed classes circles. tasks data preparation, model estimation, model evaluation well corresponding functions classes explained detail separate vignettes: vignette Model definition defines hidden Markov model hierarchical extension. vignette Controls introduces set_controls() function used model estimation specifications. creates fHMM_controls object can fed prepare_data() function next step. vignette Data management explains prepare simulate data fHMM. goal data preparation task fHMM package create fHMM_data object via prepare_data() function can fed estimation routine next step. Furthermore, function download_data() introduced can download financial data directly https://finance.yahoo.com. vignette Model estimation defines likelihood function explain task numerical maximization. Subsequently, fit_model() function introduced receives fHMM_data, fits hidden Markov model (specified fHMM_controls) return fHMM_model object, package provides plot, print summary method. vignette State decoding defines Viterbi algorithm used decoding likely underlying state sequence. furthermore introduces implementation fHMM via decode_state() function. reorder_states() function can used state relabeling decoding. vignette Model checking explains task checking fitted model via computing (pseudo-) residuals, implemented via compute_residuals() function. vignette Model selection discusses task selecting (sense) best model among set competing models. fHMM package provides convenient compare_models() function receives arbitrary number fHMM_model-objects returns comparison statistics. vignette Prediction discusses package can used market forecasting via predict() function.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/articles/fHMM.html","id":"placement-in-the-literature","dir":"Articles","previous_headings":"","what":"Placement in the literature","title":"Introduction","text":"last decades, various HMM-type models emerged popular tools modeling financial time series subject state-switching time (Schaller Norden 1997) (Dias, Vermunt, Ramos 2010) (Ang Timmermann 2012) (Angelis Viroli 2017). (Rydén, Teräsvirta, Åsbrink 1998), (Bulla Bulla 2006), (Nystrup, Madsen, Lindström 2015), e.g., used HMMs derive stylized facts stock returns, (Hassan Nath 2005) (Nystrup, Madsen, Lindström 2017) demonstrated HMMs can prove useful economic forecasting. recently, (Lihn 2017) applied HMMs Standard Poor’s 500 (S&P 500), HMMs used identify different levels market volatility, aiming providing evidence conjecture returns exhibit negative correlation volatility. Another application S&P 500 can found (Nguyen 2018), HMMs used predict monthly closing prices derive optimal trading strategy, shown outperform conventional buy--hold strategy. applications, involve HMM-type models asset allocation portfolio optimization, can found (Bekaert Ang 2002), (Bulla et al. 2011), (Nystrup, Madsen, Lindström 2015) (Nystrup, Madsen, Lindström 2018), name examples. applications demonstrate HMMs constitute versatile class time series models naturally accounts dynamics typically exhibited financial time series.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/articles/fHMM.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"Introduction","text":"Ang, Andrew, Allan Timmermann. 2012. “Regime Changes Financial Markets.” Annual Review Financial Economics 4 (1): 313–37. https://doi.org/10.1146/annurev-financial-110311-101808. Angelis, Luca De, Cinzia Viroli. 2017. “Markov-Switching Regression Model Non-Gaussian Innovations: Estimation Testing.” Studies Nonlinear Dynamics & Econometrics 21 (2). https://doi.org/doi:10.1515/snde-2015-0118. Bekaert, Geert, Andrew Ang. 2002. “International Asset Allocation Regime Shifts.” Review Financial Studies 15 (February): 1137–87. https://doi.org/10.1093/rfs/15.4.1137. Bulla, Jan, Ingo Bulla. 2006. “Stylized Facts Financial Time Series Hidden Semi-Markov Models.” Computational Statistics & Data Analysis 51 (4): 2192–2209. https://doi.org/10.1016/j.csda.2006.07.021. Bulla, Jan, Sascha Mergner, Ingo Bulla, André Sesboüé, Christophe Chesneau. 2011. “Markov-Switching Asset Allocation: Profitable Strategies Exist?” Journal Asset Management 12 (July): 310–21. https://doi.org/10.1057/jam.2010.27. Cohen, Lauren, Karl Diether, Christopher Malloy. 2013. “Legislating Stock Prices.” Journal Financial Economics 110 (3): 574–95. https://doi.org/doi.org/10.1016/j.jfineco.2013.08.012. Dias, José, Jeroen Vermunt, Sofia Ramos. 2010. “Mixture Hidden Markov Models Finance Research.” Psycho-Oncology - PSYCHO-ONCOL, January, 451–59. https://doi.org/10.1007/978-3-642-01044-6_41. Hassan, Md, Baikunth Nath. 2005. “Stock Market Forecasting Using Hidden Markov Model: New Approach.” 5th International Conference Intelligent Systems Design Applications 2005 (October): 192–96. https://doi.org/10.1109/ISDA.2005.85. Humpe, Andreas, Peter Macmillan. 2009. “Can Macroeconomic Variables Explain Long-Term Stock Market Movements? Comparison Us Japan.” Applied Financial Economics 19 (2): 111–19. https://doi.org/10.1080/09603100701748956. Lihn, S. H. 2017. “Hidden Markov Model Financial Time Series Application S&P 500 Index.” Quantitative Finance (Forthcoming). Nguyen, N. 2018. “Hidden Markov Model Stock Trading.” International Journal Financial Studies 6 (2). Nystrup, Peter, Henrik Madsen, Erik Lindström. 2015. “Stylised Facts Financial Time Series Hidden Markov Models Continuous Time.” Quantitative Finance 15 (9): 1531–41. https://doi.org/10.1080/14697688.2015.1004801. ———. 2017. “Long Memory Financial Time Series Hidden Markov Models Time-Varying Parameters.” Journal Forecasting 36 (8): 989–1002. https://doi.org/10.1002/.2447. ———. 2018. “Dynamic Portfolio Optimization Across Hidden Market Regimes.” Quantitative Finance 18 (1): 83–95. https://doi.org/10.1080/14697688.2017.1342857. Oelschläger, Lennart, Timo Adam. 2021. “Detecting Bearish Bullish Markets Financial Time Series Using Hierarchical Hidden Markov Models.” Statistical Modelling. https://doi.org/10.1177/1471082X211034048. Rydén, Tobias, Timo Teräsvirta, Stefan Åsbrink. 1998. “Stylized Facts Daily Return Series Hidden Markov Model.” Journal Applied Econometrics 13 (3): 217–44. Schaller, Huntley, Simon Van Norden. 1997. “Regime Switching Stock Market Returns.” Applied Financial Economics 7 (2): 177–91. https://doi.org/10.1080/096031097333745.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/articles/v01_model_definition.html","id":"the-hidden-markov-model","dir":"Articles","previous_headings":"","what":"The Hidden Markov Model","title":"Model definition","text":"HMMs constitute versatile class statistical models time series, see e.g. (Zucchini Langrock 2016) comprehensive introduction. predicate behavior nature can divided finite number states, state active directly observed. However, point time, data point observed, depends current state nature thus yields information latter. formally, concept can formulated introducing two stochastic processes: time point \\(t\\) discrete time space \\(\\{1,\\dots,T\\}\\), underlying process \\((S_t)_t\\) selects one state state space \\(\\{1,\\dots,N\\}\\). call \\((S_t)_t\\) hidden state process. Depending state active \\(t\\), one \\(N\\) distributions \\(f^{(1)},\\dots,f^{(N)}\\) generates observation \\(X_t\\). process \\((X_t)_t\\) called observed state-dependent process. make following assumptions processes: assume \\((S_t)_t\\) time-homogeneous Markov process first order. process therefore identified initial distribution \\(\\delta\\) transition probability matrix (t.p.m.) \\(\\Gamma\\). process \\((X_t)_t\\) said satisfy conditional independence assumption, .e. conditionally current state \\(S_t\\), observation \\(X_t\\) independent states observations. practical point view, reasonable identify initial distribution \\((S_t)_t\\) stationary distribution \\(\\pi\\) (assume exist): one hand, hidden state process evolving time start observe hence can assumed stationary. hand, \\(\\pi\\) determined \\(\\Gamma\\) equation \\(\\pi\\Gamma=\\pi\\), setting \\(\\delta=\\pi\\) reduces number parameters need estimated, convenient computational perspective (Zucchini Langrock 2016). case financial data, hidden states can interpreted different moods market. Even though moods observed directly, price changes — clearly depend current mood market — can observed. Thereby, using underlying Markov process, can detect mood active point time different moods alternate. Depending current mood, price change generated different distribution. distributions characterize moods terms expected return volatility.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/articles/v01_model_definition.html","id":"adding-a-hierarchical-structure","dir":"Articles","previous_headings":"","what":"Adding a Hierarchical Structure","title":"Model definition","text":"HMM can extended hierarchical structure, resulting HHMM. Assume dealing two time series observed two different time scales. observation time series coarser scale, several observations times series finer scale, e.g. monthly observations corresponding daily observations. Following concept HMMs, can model state-dependent time series jointly. First, treat time series coarser scale stemming ordinary HMM, refer coarse-scale HMM: time point \\(t\\) coarse-scale time space \\(\\{1,\\dots,T\\}\\), underlying process \\((S_t)_t\\) selects one state coarse-scale state space \\(\\{1,\\dots,N\\}\\). call \\((S_t)_t\\) hidden coarse-scale state process. Depending state active \\(t\\), one \\(N\\) distributions \\(f^{(1)},\\dots,f^{(N)}\\) realizes observation \\(X_t\\). process \\((X_t)_t\\) called observed coarse-scale state-dependent process. processes \\((S_t)_t\\) \\((X_t)_t\\) properties , namely \\((S_t)_t\\) first-order Markov process \\((X_t)_t\\) satisfies conditional independence assumption. Subsequently, segment observations fine-scale time series \\(T\\) distinct chunks, contains data points correspond \\(t\\)-th coarse-scale time point. Assuming \\(T^*\\) fine-scale observations every coarse-scale time point, face \\(T\\) chunks comprising \\(T^*\\) fine-scale observations . hierarchical structure now evinces model chunks one \\(N\\) possible fine-scale HMMs. fine-scale HMMs t.p.m. \\(\\Gamma^{*()}\\), initial distribution \\(\\delta^{*()}\\), stationary distribution \\(\\pi^{*()}\\), state-dependent distributions \\(f^{*(,1)},\\dots,f^{*(,N^*)}\\). fine-scale HMM selected explain \\(t\\)-th chunk fine-scale observations depends hidden coarse-scale state \\(S_t\\). \\(\\)-th fine-scale HMM explaining \\(t\\)-th chunk fine-scale observations consists following two stochastic processes: time point \\(t^*\\) fine-scale time space \\(\\{1,\\dots,T^*\\}\\), process \\((S^*_{t,t^*})_{t^*}\\) selects one state fine-scale state space \\(\\{1,\\dots,N^*\\}\\). call \\((S^*_{t,t^*})_{t^*}\\) hidden fine-scale state process. Depending state active \\(t^*\\), one \\(N^*\\) distributions \\(f^{*(,1)},\\dots,f^{*(,N^*)}\\) realizes observation \\(X^*_{t,t^*}\\). process \\((X^*_{t,t^*})_{t^*}\\) called observed fine-scale state-dependent process. fine-scale processes \\((S^*_{1,t^*})_{t^*},\\dots,(S^*_{T,t^*})_{t^*}\\) \\((X^*_{1,t^*})_{t^*},\\dots,(X^*_{T,t^*})_{t^*}\\) satisfy Markov property conditional independence assumption, respectively, well. Furthermore, assumed fine-scale HMM explaining \\((X^*_{t,t^*})_{t^*}\\) depends \\(S_t\\).","code":""},{"path":"https://loelschlaeger.github.io/fHMM/articles/v01_model_definition.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"Model definition","text":"Zucchini, MacDonald, W., R. Langrock. 2016. “Hidden Markov Models Time Series: Introduction Using R, 2nd Edition.” Chapman Hall/CRC.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/articles/v02_controls.html","id":"the-set_controls-function","dir":"Articles","previous_headings":"","what":"The set_controls function","title":"Controls","text":"fHMM philosophie start setting model estimation specification, done specifying named list settings passing set_controls() function. function checks specifications returns fHMM_controls object stores specifications thereby provides required information fHMM functionalities.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/articles/v02_controls.html","id":"examples","dir":"Articles","previous_headings":"","what":"Examples","title":"Controls","text":"Let’s look example specifications. download DAX data demonstration1:","code":"download_data(symbol = \"^GDAXI\", file = \"dax.csv\") #> Download successful. #> * symbol: ^GDAXI  #> * from: 1987-12-30  #> * to: 2022-01-28  #> * path: /Users/runner/work/fHMM/fHMM/vignettes/dax.csv"},{"path":"https://loelschlaeger.github.io/fHMM/articles/v02_controls.html","id":"hmms-for-empirical-data","dir":"Articles","previous_headings":"Examples","what":"HMMs for empirical data","title":"Controls","text":"following specifies 3-state HMM state-dependent t-distributions data file dax.csv, dates provided column called Date data column called Close. data transformed log-returns truncated . already specify want 50 numerical optimization runs.","code":"controls = list(   states = 3,   sdds   = \"t\",   data   = list(file        = \"dax.csv\",                 date_column = \"Date\",                 data_column = \"Close\",                 logreturns  = TRUE,                 from        = \"2015-01-01\"),   fit    = list(runs        = 50) ) set_controls(controls) #> fHMM controls: #> * hierarchy: FALSE  #> * data type: empirical  #> * number of states: 3  #> * sdds: t()  #> * number of runs: 50"},{"path":"https://loelschlaeger.github.io/fHMM/articles/v02_controls.html","id":"simulated-hmm-data","dir":"Articles","previous_headings":"Examples","what":"Simulated HMM data","title":"Controls","text":"following specifies 2-state HMM state-dependent Gamma distributions, expectiation values state 1 2 fixed -1 1, respectively. model fitted horizon = 500 simulated data points specification.","code":"controls = list(   states  = 2,   sdds    = \"gamma(mu = -1|1)\",   horizon = 500 ) set_controls(controls) #> fHMM controls: #> * hierarchy: FALSE  #> * data type: simulated  #> * number of states: 2  #> * sdds: gamma(mu = -1|1)  #> * number of runs: 100"},{"path":"https://loelschlaeger.github.io/fHMM/articles/v02_controls.html","id":"hierarchical-hmms","dir":"Articles","previous_headings":"Examples","what":"Hierarchical HMMs","title":"Controls","text":"Specifying hierarchical HMMs analogously, except new parameters can specified (example period) parameters now can specified hierarchies. help page set_controls() function provides overview possible specifications. list controls. Either none, , selected parameters can specified. Unspecified parameters set default values (values brackets). hierarchy = TRUE, parameters (*) must vector length 2, first entry corresponds coarse-scale second entry fine-scale layer. hierarchy (FALSE): boolean, set TRUE hierarchical HMM. states (*) (2): number states underlying Markov chain. sdds (*) (“t(df = Inf)”): Specifying state-dependent distribution, one “t” (t-distribution) “gamma” (gamma distribution). fix one parameter values, write e.g. “t(df = Inf)” “gamma(mu = 0, sigma = 1)”, respectively. fix different values one parameter different states, separate “|”, e.g. “t(mu = -1|1)”. horizon (*) (100): numeric, specifying length time horizon. first entry horizon ignored data specified. period (“m”): relevant hierarchy = TRUE horizon[2] = NA. case, specifies flexible, periodic fine-scale time horizon can one “w” week, “m” month, “q” quarter, “y” year. data (NA): list controls specifying data. data = NA, data gets simulated. Otherwise: file (*): character, path .csv-file financial data, must column named date_column (dates) data_column (financial data). date_column (*) (“Date”): character, name column file dates. Can NA case consecutive integers used time points. data_column (*) (“Close”): character, name column file financial data. (NA): character format “YYYY-MM-DD”, setting lower data limit. lower limit = NA. Ignored controls\\(data\\)date_column NA. (NA): character format “YYYY-MM-DD”, setting upper data limit. upper limit = NA. Ignored controls\\(data\\)date_column NA. logreturns (*) (FALSE): boolean, TRUE data transformed log-returns. merge (function(x) mean(x)): relevant hierarchy = TRUE. case, function, merges numeric vector fine-scale data x one coarse-scale observation. example, merge = function(x) mean(x) defines mean fine-scale data coarse-scale observation, merge = function(x) mean(abs(x)) mean absolute values, merge = function(x) (abs(x)) sum absolute values, merge = function(x) (tail(x,1)-head(x,1))/head(x,1) relative change first last fine-scale observation. fit: list controls specifying model fitting: runs (100): integer, setting number optimization runs. origin (FALSE): boolean, TRUE optimization initialized true parameter values. simulated data. origin = TRUE, sets run = 1 accept = 1:5. accept (1:3): integer (vector), specifying optimization runs accepted based output code nlm. gradtol (1e-6): positive numeric value, passed nlm. iterlim (200): positive integer, passed nlm. print.level (0): One 0, 1, 2, passed nlm. steptol (1e-6): positive numeric value, passed nlm.","code":"controls = list(   hierarchy = TRUE,   horizon   = c(100, 10),   sdds      = c(\"t(df = 1)\", \"t(df = 1)\"),   period    = \"m\" ) set_controls(controls) #> fHMM controls: #> * hierarchy: TRUE  #> * data type: simulated  #> * number of states: 2 2  #> * sdds: t(df = 1) t(df = 1)  #> * number of runs: 100 ?set_controls"},{"path":"https://loelschlaeger.github.io/fHMM/articles/v03_data_management.html","id":"empirical-data","dir":"Articles","previous_headings":"","what":"Empirical data","title":"Data management","text":"Empirical data modeling must csv-format path must specified set_controls(), see vignette specifying controls details.1 fHMM package contains two datasets DAX VW stock demonstration purpose can accessed follows: prepare_data() function prepares data based data controls specifications returns fHMM_data object can passed fit_model() function.","code":"system.file(\"extdata\", \"dax.csv\", package = \"fHMM\") #> [1] \"/Users/runner/work/_temp/Library/fHMM/extdata/dax.csv\" system.file(\"extdata\", \"vw.csv\", package = \"fHMM\") #> [1] \"/Users/runner/work/_temp/Library/fHMM/extdata/vw.csv\" controls = list(   states = 3,   sdds   = \"t\",   data   = list(file        = system.file(\"extdata\", \"dax.csv\", package = \"fHMM\"),                 date_column = \"Date\",                 data_column = \"Close\",                 logreturns  = TRUE) ) controls <- set_controls(controls) data <- prepare_data(controls) class(data) #> [1] \"fHMM_data\" summary(data) #> Summary of fHMM empirical data #> * number of observations: 8778  #> * data source: dax.csv  #> * date column: Date  #> * log returns: TRUE"},{"path":"https://loelschlaeger.github.io/fHMM/articles/v03_data_management.html","id":"download-stock-data","dir":"Articles","previous_headings":"","what":"Download stock data","title":"Data management","text":"can download daily stock prices listed https://finance.yahoo.com/ via symbol stock’s symbol match official symbol https://finance.yahoo.com, define time interval (format \"YYYY-MM-DD\"), file name file .csv-file saved. Per default, saved current working directory name <symbol>.csv. example, call downloads 21st century daily data DAX current working directory.","code":"download_data(symbol, from, to, file) download_data(symbol = \"^GDAXI\", from = \"2000-01-01\", to = Sys.Date()) #> Download successful. #> * symbol: ^GDAXI  #> * from: 2000-01-03  #> * to: 2022-01-28  #> * path: /Users/runner/work/fHMM/fHMM/vignettes/^GDAXI.csv"},{"path":"https://loelschlaeger.github.io/fHMM/articles/v03_data_management.html","id":"highlighting-events","dir":"Articles","previous_headings":"","what":"Highlighting events","title":"Data management","text":"Historical events can highlighted empirical data time series specifying named list events elements dates (vector dates) names (vector names events) passing plot method, example:","code":"events = fHMM_events(   list(     dates = c(\"2001-09-11\",\"2008-09-15\",\"2020-01-27\"),     labels = c(\"9/11 terrorist attack\",\"Bankruptcy of Lehman Brothers\",\"First COVID-19 case in Germany\")     )   ) print(events) #>        dates                         labels #> 1 2001-09-11          9/11 terrorist attack #> 2 2008-09-15  Bankruptcy of Lehman Brothers #> 3 2020-01-27 First COVID-19 case in Germany plot(data, events = events)"},{"path":"https://loelschlaeger.github.io/fHMM/articles/v03_data_management.html","id":"simulated-data","dir":"Articles","previous_headings":"","what":"Simulated data","title":"Data management","text":"data parameter model’s controls unspecified, model fitted simulated data model specification. handy testing functionality conducting simulation experiments. Model parameters can specified defining fHMM_parameters-object via fHMM_parameters() function.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/articles/v04_model_estimation.html","id":"likelihood-evaluation-using-the-forward-algorithm","dir":"Articles","previous_headings":"","what":"Likelihood evaluation using the forward algorithm","title":"Model estimation","text":"HHMM can treated HMM two conditionally independent data streams; coarse-scale observations one hand corresponding chunk fine-scale observations connected fine-scale HMM hand. derive likelihood HHMM, start computing likelihood chunk fine-scale observations generated fine-scale HMM. fit \\(\\)-th fine-scale HMM, model parameters \\(\\theta^{*()}=(\\delta^{*()}, \\Gamma^{*()},(f^{*(,k)})_k)\\) \\(t\\)-th chunk fine-scale observations, denoted \\((X_{t,t^*})_{t^*}\\), consider fine-scale forward probabilities \\[\\begin{align*} \\alpha^{*()}_{k,t^*}=f^{*()}(X^*_{t,1},\\dots,X^*_{t,t^*}, S^*_{t,t^*}=k), \\end{align*}\\] \\(t^*=1,\\dots,T^*\\) \\(k=1,\\dots,N^*\\). Using fine-scale forward probabilities, fine-scale likelihoods can obtained law total probability \\[\\begin{align*} \\mathcal{L}^\\text{HMM}(\\theta^{*()}\\mid (X^*_{t,t^*})_{t^*})=\\sum_{k=1}^{N^*}\\alpha^{*()}_{k,T^*}. \\end{align*}\\] forward probabilities can calculated recursively \\[\\begin{align*} \\alpha^{*()}_{k,1} &= \\delta^{*()}_k f^{*(,k)}(X^*_{t,1}), \\\\ \\alpha^{*()}_{k,t^*} &= f^{*(,k)}(X^*_{t,t^*})\\sum_{j=1}^{N^*}\\gamma^{*()}_{jk}\\alpha^{*()}_{j,t^*-1}, \\quad t^*=2,\\dots,T^*. \\end{align*}\\] transition likelihood function HMM likelihood function HHMM straightforward: Consider coarse-scale forward probabilities \\[\\begin{align*} \\alpha_{,t}=f(X_1,\\dots,X_t,(X^*_{1,t^*})_{t^*},\\dots,(X^*_{t,t^*})_{t^*}, S_t=), \\end{align*}\\] \\(t=1,\\dots,T\\) \\(=1,\\dots,N\\). likelihood function HHMM results \\[\\begin{align*} \\mathcal{L}^\\text{HHMM}(\\theta,(\\theta^{*()})_i\\mid (X_t)_t,((X^*_{t,t^*})_{t^*})_t)=\\sum_{=1}^{N}\\alpha_{,T}. \\end{align*}\\] coarse-scale forward probabilities can calculated similarly applying recursive scheme \\[\\begin{align*} \\alpha_{,1} &= \\delta_i \\mathcal{L}^\\text{HMM}(\\theta^{*()}\\mid (X^*_{1,t^*})_{t^*})f^{()}(X_1), \\\\ \\alpha_{,t} &= \\mathcal{L}^\\text{HMM}(\\theta^{*()}\\mid (X^*_{t,t^*})_{t^*}) f^{()}(X_t)\\sum_{j=1}^{N}\\gamma_{ji}\\alpha_{j,t-1}, \\quad t=2,\\dots,T. \\end{align*}\\]","code":""},{"path":"https://loelschlaeger.github.io/fHMM/articles/v04_model_estimation.html","id":"challenges-associated-with-the-likelihood-maximization","dir":"Articles","previous_headings":"","what":"Challenges associated with the likelihood maximization","title":"Model estimation","text":"account parameter constraints associated transition probabilities (potentially parameters state-dependent distributions), use parameter transformations. ensure entries t.p.m.s fulfill non-negativity unity condition, estimate unconstrained values \\((\\eta_{ij})_{\\neq j}\\) non-diagonal entries \\(\\Gamma\\) derive probabilities using multinomial logit link \\[\\begin{align*} \\gamma_{ij}=\\frac{\\exp[\\eta_{ij}]}{1+\\sum_{k\\neq }\\exp[\\eta_{ik}]},~\\neq j \\end{align*}\\] rather estimating probabilities \\((\\gamma_{ij})_{,j}\\) directly. diagonal entries result unity condition \\[\\begin{align*} \\gamma_{ii}=1-\\sum_{j\\neq }\\gamma_{ij}. \\end{align*}\\] Furthermore, variances strictly positive, can achieved applying exponential transformation unconstrained estimator. numerically maximizing likelihood using Newton-Raphson-type method, often face numerical - overflow, can addressed maximizing logarithm likelihood incorporating constants conducive way (see Zucchini Langrock (2016) Oelschläger Adam (2021) details). likelihood maximized respect relatively large number parameters, obtained maximum can local rather global one. avoid problem, recommended run maximization multiple times different, possibly randomly selected starting points, choose model corresponds highest likelihood (see Zucchini Langrock (2016) Oelschläger Adam (2021) details).","code":""},{"path":[]},{"path":"https://loelschlaeger.github.io/fHMM/articles/v04_model_estimation.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"Model estimation","text":"Oelschläger, Lennart, Timo Adam. 2021. “Detecting Bearish Bullish Markets Financial Time Series Using Hierarchical Hidden Markov Models.” Statistical Modelling. https://doi.org/10.1177/1471082X211034048. Zucchini, MacDonald, W., R. Langrock. 2016. “Hidden Markov Models Time Series: Introduction Using R, 2nd Edition.” Chapman Hall/CRC.","code":""},{"path":[]},{"path":[]},{"path":"https://loelschlaeger.github.io/fHMM/articles/v06_model_checking.html","id":"model-checking-using-pseudo-residuals","dir":"Articles","previous_headings":"","what":"Model checking using pseudo-residuals","title":"Model checking","text":"Analyzing -called pseudo-residuals enables us check whether fitted HMM describes data sufficiently well. done standard residual analysis since observations explained different distributions, depending active state. Therefore, observations transformed common scale, can achieved following way: \\(X_t\\) invertible distribution function \\(F_{X_t}\\), \\[\\begin{align*} Z_t=\\Phi^{-1}(F_{X_t} (X_t)) \\end{align*}\\] standard normally distributed, \\(\\Phi\\) denotes cumulative distribution function standard normal distribution. observations, \\((X_t)_t\\), modeled well pseudo-residuals, \\((Z_t)_t\\), approximately standard normally distributed, typically assessed using quantile-quantile plots statistical tests Jarque-Bera test . HHMMs, first decode coarse-scale state process using Viterbi algorithm (see Section ). Subsequently, assign coarse-scale observation associated distribution function fitted model perform transformation described . Using Viterbi-decoded coarse-scale states, treat fine-scale observations analogously.","code":""},{"path":[]},{"path":[]},{"path":"https://loelschlaeger.github.io/fHMM/articles/v07_model_selection.html","id":"model-selection-using-information-criteria","dir":"Articles","previous_headings":"","what":"Model selection using information criteria","title":"Model selection","text":"Idea: find compromise model fit model complexity. AIC: \\[\\begin{align*} \\text{AIC} = \\end{align*}\\] BIC: \\[\\begin{align*} \\text{BIC} = \\end{align*}\\]","code":""},{"path":"https://loelschlaeger.github.io/fHMM/articles/v07_model_selection.html","id":"challanges-associated-with-model-selection","dir":"Articles","previous_headings":"","what":"Challanges associated with model selection","title":"Model selection","text":"HHMMs (HMMs) favor models many states. Pragmatic selection number states. Cite paper Jenny.","code":""},{"path":[]},{"path":[]},{"path":"https://loelschlaeger.github.io/fHMM/articles/v08_prediction.html","id":"how-to-predict","dir":"Articles","previous_headings":"","what":"How to predict?","title":"Prediction","text":"Cite book Roland.","code":""},{"path":[]},{"path":"https://loelschlaeger.github.io/fHMM/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Lennart Oelschläger. Author, maintainer. Timo Adam. Author. Rouven Michels. Author.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Oelschläger L, Adam T, Michels R (2022). fHMM: Fitting Hidden Markov Models Financial Data. R package version 1.0.0, https://loelschlaeger.github.io/fHMM/.","code":"@Manual{,   title = {fHMM: Fitting Hidden Markov Models to Financial Data},   author = {Lennart Oelschläger and Timo Adam and Rouven Michels},   year = {2022},   note = {R package version 1.0.0},   url = {https://loelschlaeger.github.io/fHMM/}, }"},{"path":"https://loelschlaeger.github.io/fHMM/index.html","id":"fhmm-","dir":"","previous_headings":"","what":"Fit hidden Markov models to financial data","title":"Fit hidden Markov models to financial data","text":"goal fHMM detect bearish bullish markets financial time series applying (hierarchical) hidden Markov models.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Fit hidden Markov models to financial data","text":"can install released version fHMM CRAN : development version GitHub :","code":"install.packages(\"fHMM\") # install.packages(\"devtools\") devtools::install_github(\"loelschlaeger/fHMM\")"},{"path":"https://loelschlaeger.github.io/fHMM/index.html","id":"example-fitting-an-hmm-to-the-dax","dir":"","previous_headings":"","what":"Example: Fitting an HMM to the DAX","title":"Fit hidden Markov models to financial data","text":"fit 2-state HMM state-dependent t-distributions DAX log-returns 2010 2020. states can interpreted proxies bearish bullish markets. package build-function download data Yahoo Finance: first need define model setting controls: function prepare_data prepares data estimation: now fit model subsequentially decode hidden states: Let’s visualize estimated state-dependent distributions decoded time series:","code":"library(fHMM) #> Thanks for using fHMM version 1.0.0! #> See https://loelschlaeger.de/fHMM for help. #> Type 'citation(\"fHMM\")' for citing this R package. library(magrittr) path <- paste0(tempdir(),\"/dax.csv\") download_data(symbol = \"^GDAXI\", file = path, verbose = FALSE) controls <- list(   states = 2,   sdds   = \"t\",   data   = list(file        = path,                 date_column = \"Date\",                 data_column = \"Close\",                 logreturns  = TRUE,                 from        = \"2010-01-01\",                 to          = \"2020-12-31\") ) (controls %<>% set_controls) #> fHMM controls: #> * hierarchy: FALSE  #> * data type: empirical  #> * number of states: 2  #> * sdds: t()  #> * number of runs: 100 data <- prepare_data(controls) summary(data) #> Summary of fHMM empirical data #> * number of observations: 2791  #> * data source: dax.csv  #> * date column: Date  #> * log returns: TRUE set.seed(1) model <- fit_model(data, ncluster = 7) %>% decode_states  #> Checking start values #> Maximizing likelihood #> Computing Hessian #> Fitting completed #> Decoded states summary(model) #> Summary of fHMM model #>  #>   simulated hierarchy       LL       AIC       BIC #> 1     FALSE     FALSE 8577.094 -17138.19 -17090.71 #>  #> State-dependent distributions: #> t()  #>  #> Estimates: #>                   lb   estimate         ub #> Gamma_2.1  0.0313615  0.0319495  0.0325481 #> Gamma_1.2  0.0107352  0.0109757  0.0112215 #> mu_1       0.0009344  0.0009467  0.0009591 #> mu_2      -0.0010204 -0.0009720 -0.0009235 #> sigma_1    0.0072680  0.0072860  0.0073039 #> sigma_2    0.0168010  0.0168710  0.0169412 #> df_1       5.3519409  5.3999003  5.4482894 #> df_2       6.5553795  6.6527687  6.7516048 #>  #> States: #> decoded #>    1    2  #> 2208  583 model %>% plot(\"sdds\") model %>% plot(\"ts\")"},{"path":"https://loelschlaeger.github.io/fHMM/reference/Gamma2delta.html","id":null,"dir":"Reference","previous_headings":"","what":"This function computes the stationary distribution of a transition\nprobability matrix Gamma. — Gamma2delta","title":"This function computes the stationary distribution of a transition\nprobability matrix Gamma. — Gamma2delta","text":"function computes stationary distribution transition probability matrix Gamma.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/Gamma2delta.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This function computes the stationary distribution of a transition\nprobability matrix Gamma. — Gamma2delta","text":"","code":"Gamma2delta(Gamma)"},{"path":"https://loelschlaeger.github.io/fHMM/reference/Gamma2delta.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"This function computes the stationary distribution of a transition\nprobability matrix Gamma. — Gamma2delta","text":"Gamma transition probability matrix.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/Gamma2delta.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"This function computes the stationary distribution of a transition\nprobability matrix Gamma. — Gamma2delta","text":"stationary distribution vector.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/Gamma2delta.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"This function computes the stationary distribution of a transition\nprobability matrix Gamma. — Gamma2delta","text":"stationary distribution vector computed, set discrete uniform distribution states.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/Gamma2gammasCon.html","id":null,"dir":"Reference","previous_headings":"","what":"This function constrains the non-diagonal matrix elements of a transition\nprobability matrix Gamma. — Gamma2gammasCon","title":"This function constrains the non-diagonal matrix elements of a transition\nprobability matrix Gamma. — Gamma2gammasCon","text":"function constrains non-diagonal matrix elements transition probability matrix Gamma.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/Gamma2gammasCon.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This function constrains the non-diagonal matrix elements of a transition\nprobability matrix Gamma. — Gamma2gammasCon","text":"","code":"Gamma2gammasCon(Gamma, shift = 0.001)"},{"path":"https://loelschlaeger.github.io/fHMM/reference/Gamma2gammasCon.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"This function constrains the non-diagonal matrix elements of a transition\nprobability matrix Gamma. — Gamma2gammasCon","text":"Gamma transition probability matrix. shift numeric value shifting boundary probabilities.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/Gamma2gammasCon.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"This function constrains the non-diagonal matrix elements of a transition\nprobability matrix Gamma. — Gamma2gammasCon","text":"vector constrained non-diagonal matrix elements (column-wise).","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/Gamma2gammasUncon.html","id":null,"dir":"Reference","previous_headings":"","what":"This function un-constraines the non-diagonal matrix elements of a transition\nprobability matrix Gamma. — Gamma2gammasUncon","title":"This function un-constraines the non-diagonal matrix elements of a transition\nprobability matrix Gamma. — Gamma2gammasUncon","text":"function un-constraines non-diagonal matrix elements transition probability matrix Gamma.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/Gamma2gammasUncon.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This function un-constraines the non-diagonal matrix elements of a transition\nprobability matrix Gamma. — Gamma2gammasUncon","text":"","code":"Gamma2gammasUncon(Gamma)"},{"path":"https://loelschlaeger.github.io/fHMM/reference/Gamma2gammasUncon.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"This function un-constraines the non-diagonal matrix elements of a transition\nprobability matrix Gamma. — Gamma2gammasUncon","text":"Gamma transition probability matrix.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/Gamma2gammasUncon.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"This function un-constraines the non-diagonal matrix elements of a transition\nprobability matrix Gamma. — Gamma2gammasUncon","text":"vector un-constrained non-diagonal matrix elements (column-wise).","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/check_date.html","id":null,"dir":"Reference","previous_headings":"","what":"Check date format ","title":"Check date format ","text":"function checks input date format \"YYYY-MM-DD\".","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/check_date.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check date format ","text":"","code":"check_date(date)"},{"path":"https://loelschlaeger.github.io/fHMM/reference/check_date.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check date format ","text":"date character, specifying date format \"YYYY-MM-DD\".","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/check_date.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check date format ","text":".Date(date) date format \"YYYY-MM-DD\". Otherwise, function throws error.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/compare_models.html","id":null,"dir":"Reference","previous_headings":"","what":"Comparison of multiple fHMM_model. — compare_models","title":"Comparison of multiple fHMM_model. — compare_models","text":"function compares multiple fHMM_model.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/compare_models.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Comparison of multiple fHMM_model. — compare_models","text":"","code":"compare_models(...)"},{"path":"https://loelschlaeger.github.io/fHMM/reference/compare_models.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Comparison of multiple fHMM_model. — compare_models","text":"... list one objects class fHMM_model.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/compare_models.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Comparison of multiple fHMM_model. — compare_models","text":"data frame.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/compute_T_star.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute lengths of fine-scale chunks — compute_T_star","title":"Compute lengths of fine-scale chunks — compute_T_star","text":"helper-function computes lengths fine-scale chunks.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/compute_T_star.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute lengths of fine-scale chunks — compute_T_star","text":"","code":"compute_T_star(horizon, period, dates = NULL, seed = NULL)"},{"path":"https://loelschlaeger.github.io/fHMM/reference/compute_T_star.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute lengths of fine-scale chunks — compute_T_star","text":"horizon element controls$horizon, .e. integer vector length 2, second entry can NA. period element controls$period, .e. one \"w\", \"m\", code\"q\", \"y\". dates vector dates empirical fine-scale data. seed Set seed simulation flexible chunk lengths.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/compute_T_star.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute lengths of fine-scale chunks — compute_T_star","text":"vector fine-scale chunk sizes.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/compute_ci.html","id":null,"dir":"Reference","previous_headings":"","what":"Confidence intervals — compute_ci","title":"Confidence intervals — compute_ci","text":"Computes confidence intervals estimates.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/compute_ci.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Confidence intervals — compute_ci","text":"","code":"compute_ci(x, ci_level = 0.05)"},{"path":"https://loelschlaeger.github.io/fHMM/reference/compute_ci.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Confidence intervals — compute_ci","text":"x object class fHMM_model. ci_level confidence level, numeric 0 1.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/compute_ci.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Confidence intervals — compute_ci","text":"list containing following elements: lb: lower bound confidence estimate: point estimate ub: upper bound confidence","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/compute_residuals.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute (pseudo-) residuals. — compute_residuals","title":"Compute (pseudo-) residuals. — compute_residuals","text":"function computes (pseudo-) residuals estimated model.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/compute_residuals.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute (pseudo-) residuals. — compute_residuals","text":"","code":"compute_residuals(x)"},{"path":"https://loelschlaeger.github.io/fHMM/reference/compute_residuals.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute (pseudo-) residuals. — compute_residuals","text":"x object class RprobitB_model.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/compute_residuals.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute (pseudo-) residuals. — compute_residuals","text":"object class RprobitB_model.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/decode_states.html","id":null,"dir":"Reference","previous_headings":"","what":"Decode the underlying hidden state sequence. — decode_states","title":"Decode the underlying hidden state sequence. — decode_states","text":"function decodes (likely) underlying hidden state sequence applying Viterbi algorithm https://en.wikipedia.org/wiki/Viterbi_algorithm.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/decode_states.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Decode the underlying hidden state sequence. — decode_states","text":"","code":"decode_states(x)"},{"path":"https://loelschlaeger.github.io/fHMM/reference/decode_states.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Decode the underlying hidden state sequence. — decode_states","text":"x object class fHMM_model.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/decode_states.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Decode the underlying hidden state sequence. — decode_states","text":"object class fHMM_model.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/dfCon2dfUncon.html","id":null,"dir":"Reference","previous_headings":"","what":"This function un-constrains the constrained degrees of freedom dfCon. — dfCon2dfUncon","title":"This function un-constrains the constrained degrees of freedom dfCon. — dfCon2dfUncon","text":"function un-constrains constrained degrees freedom dfCon.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/dfCon2dfUncon.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This function un-constrains the constrained degrees of freedom dfCon. — dfCon2dfUncon","text":"","code":"dfCon2dfUncon(dfCon)"},{"path":"https://loelschlaeger.github.io/fHMM/reference/dfCon2dfUncon.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"This function un-constrains the constrained degrees of freedom dfCon. — dfCon2dfUncon","text":"dfCon vector constrained degrees freedom.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/dfCon2dfUncon.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"This function un-constrains the constrained degrees of freedom dfCon. — dfCon2dfUncon","text":"vector un-constrained degrees freedom.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/dfUncon2dfCon.html","id":null,"dir":"Reference","previous_headings":"","what":"This function constrains the un-constrained degrees of freedom dfUncon. — dfUncon2dfCon","title":"This function constrains the un-constrained degrees of freedom dfUncon. — dfUncon2dfCon","text":"function constrains un-constrained degrees freedom dfUncon.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/dfUncon2dfCon.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This function constrains the un-constrained degrees of freedom dfUncon. — dfUncon2dfCon","text":"","code":"dfUncon2dfCon(dfUncon)"},{"path":"https://loelschlaeger.github.io/fHMM/reference/dfUncon2dfCon.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"This function constrains the un-constrained degrees of freedom dfUncon. — dfUncon2dfCon","text":"dfUncon vector un-constrained degrees freedom.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/dfUncon2dfCon.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"This function constrains the un-constrained degrees of freedom dfUncon. — dfUncon2dfCon","text":"vector constrained degrees freedom.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/download_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Download financial data. — download_data","title":"Download financial data. — download_data","text":"function downloads stock data https://finance.yahoo.com saves .csv-file.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/download_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download financial data. — download_data","text":"","code":"download_data(   symbol,   from = \"1902-01-01\",   to = Sys.Date(),   file = paste0(symbol, \".csv\"),   verbose = TRUE )"},{"path":"https://loelschlaeger.github.io/fHMM/reference/download_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download financial data. — download_data","text":"symbol character, stock's symbol. must match identifier https://finance.yahoo.com. date format \"YYYY-MM-DD\", setting lower data bound. Must earlier \"1902-01-01\". date format \"YYYY-MM-DD\", setting upper data bound. Default current date Sys.date(). file name file .csv-file saved. Per default, saved current working directory name \"symbol.csv\". verbose TRUE returns information download success.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/download_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download financial data. — download_data","text":"return value.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/download_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Download financial data. — download_data","text":"downloaded data .csv-file following columns: Date: date. Open: Opening price. High: Highest price. Low: Lowest price. Close: Close price adjusted splits. Adj.Close: Close price adjusted dividends splits. Volume: Trade volume.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/download_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download financial data. — download_data","text":"","code":"### download 21st century DAX data download_data(   symbol = \"^GDAXI\", from = \"2000-01-03\",   file = paste0(tempfile(), \".csv\") ) #> Download successful. #> * symbol: ^GDAXI  #> * from: 2000-01-03  #> * to: 2022-01-28  #> * path: /private/var/folders/24/8k48jl6d249_n_qfxwsl6xvm0000gn/T/RtmpnA16K6/file11976b60f5d2.csv"},{"path":"https://loelschlaeger.github.io/fHMM/reference/fHMM.html","id":null,"dir":"Reference","previous_headings":"","what":"fHMM: A package for fitting hidden Markov models to financial data — fHMM","title":"fHMM: A package for fitting hidden Markov models to financial data — fHMM","text":"package provides tools downloading modeling financial data via (hierarchical) hidden Markov model.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/fHMM_colors.html","id":null,"dir":"Reference","previous_headings":"","what":"Set color scheme for visualizations in the fHMM package. — fHMM_colors","title":"Set color scheme for visualizations in the fHMM package. — fHMM_colors","text":"function defines color scheme visualizations fHMM package.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/fHMM_colors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set color scheme for visualizations in the fHMM package. — fHMM_colors","text":"","code":"fHMM_colors(controls, colors = NULL)"},{"path":"https://loelschlaeger.github.io/fHMM/reference/fHMM_colors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set color scheme for visualizations in the fHMM package. — fHMM_colors","text":"controls object class fHMM_controls. colors Either NULL character vector color names hexadecimal RGB triplets.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/fHMM_colors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set color scheme for visualizations in the fHMM package. — fHMM_colors","text":"object class fHMM_colors.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/fHMM_events.html","id":null,"dir":"Reference","previous_headings":"","what":"Check events. — fHMM_events","title":"Check events. — fHMM_events","text":"function checks input events.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/fHMM_events.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check events. — fHMM_events","text":"","code":"fHMM_events(events)"},{"path":"https://loelschlaeger.github.io/fHMM/reference/fHMM_events.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check events. — fHMM_events","text":"events list two elements. first element named \"dates\" contains characters format \"YYYY-MM-DD\". second element named \"labels\" character vector length \"dates\".","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/fHMM_events.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check events. — fHMM_events","text":"object class fHMM_data.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/fHMM_parameters.html","id":null,"dir":"Reference","previous_headings":"","what":"Set and check parameters for the fHMM package. — fHMM_parameters","title":"Set and check parameters for the fHMM package. — fHMM_parameters","text":"function sets checks parameters fHMM package.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/fHMM_parameters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set and check parameters for the fHMM package. — fHMM_parameters","text":"","code":"fHMM_parameters(   controls,   Gamma = NULL,   mus = NULL,   sigmas = NULL,   dfs = NULL,   Gammas_star = NULL,   mus_star = NULL,   sigmas_star = NULL,   dfs_star = NULL,   seed = NULL,   scale_par = c(1, 1) )"},{"path":"https://loelschlaeger.github.io/fHMM/reference/fHMM_parameters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set and check parameters for the fHMM package. — fHMM_parameters","text":"controls object class fHMM_controls. Gamma tpm (transition probability matrix) dimension controls$states[1]. mus vector expectations length controls$states[1]. sigmas vector standard deviations length controls$states[1]. dfs vector degrees freedom length controls$states[1]. relevant sdd t-distribution. Gammas_star list length controls$states[1] tpm's. tpm must dimension controls$states[2]. mus_star list length controls$states[1] vectors expectations. vector must length controls$states[2]. sigmas_star list length controls$states[1] vectors standard deviations. vector must length controls$states[2]. dfs_star list length controls$states[1] vectors degrees freedom. vector must length controls$states[2]. relevant sdd t-distribution. seed Set seed sampling parameters. scale_par positive numeric vector length two, containing scales sampled expectations standard deviations. first entry scale mus sigmas, second entry scale mus_star sigmas_star. Set entry 1 scaling.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/fHMM_parameters.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set and check parameters for the fHMM package. — fHMM_parameters","text":"object class fHMM_parameters.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/fHMM_parameters.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Set and check parameters for the fHMM package. — fHMM_parameters","text":"See vignettes information specify parameters.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/fHMM_sdds.html","id":null,"dir":"Reference","previous_headings":"","what":"Define state-dependent distributions. — fHMM_sdds","title":"Define state-dependent distributions. — fHMM_sdds","text":"function defines state-dependent distributions.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/fHMM_sdds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Define state-dependent distributions. — fHMM_sdds","text":"","code":"fHMM_sdds(sdds)"},{"path":"https://loelschlaeger.github.io/fHMM/reference/fHMM_sdds.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Define state-dependent distributions. — fHMM_sdds","text":"sdds character character vector length two can specified \"sdds\" link{set_controls}.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/fHMM_sdds.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Define state-dependent distributions. — fHMM_sdds","text":"list length length(sdds). element list, containing \"name\" distribution list \"pars\" parameters. Unknown parameters set NULL.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/fit_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Model fitting for the fHMM package. — fit_model","title":"Model fitting for the fHMM package. — fit_model","text":"function fits (hierarchical) HMM fHMM package.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/fit_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Model fitting for the fHMM package. — fit_model","text":"","code":"fit_model(data, ncluster = 1, seed = NULL)"},{"path":"https://loelschlaeger.github.io/fHMM/reference/fit_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Model fitting for the fHMM package. — fit_model","text":"data object class fHMM_data. ncluster Set number clusters parallelization. seed Set seed sampling initial values.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/fit_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Model fitting for the fHMM package. — fit_model","text":"object class fHMM_model, list ...","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/gammasCon2Gamma.html","id":null,"dir":"Reference","previous_headings":"","what":"This function builds a transition probability matrix of dimension dim\nfrom constrained non-diagonal elements gammasCon. — gammasCon2Gamma","title":"This function builds a transition probability matrix of dimension dim\nfrom constrained non-diagonal elements gammasCon. — gammasCon2Gamma","text":"function builds transition probability matrix dimension dim constrained non-diagonal elements gammasCon.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/gammasCon2Gamma.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This function builds a transition probability matrix of dimension dim\nfrom constrained non-diagonal elements gammasCon. — gammasCon2Gamma","text":"","code":"gammasCon2Gamma(gammasCon, dim)"},{"path":"https://loelschlaeger.github.io/fHMM/reference/gammasCon2Gamma.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"This function builds a transition probability matrix of dimension dim\nfrom constrained non-diagonal elements gammasCon. — gammasCon2Gamma","text":"gammasCon vector constrained non-diagonal elements transition probability matrix. dim dimension transition probability matrix.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/gammasCon2Gamma.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"This function builds a transition probability matrix of dimension dim\nfrom constrained non-diagonal elements gammasCon. — gammasCon2Gamma","text":"transition probability matrix.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/gammasCon2gammasUncon.html","id":null,"dir":"Reference","previous_headings":"","what":"This function un-constrains the constrained non-diagonal elements\ngammasCon of a transition probability matrix of dimension dim. — gammasCon2gammasUncon","title":"This function un-constrains the constrained non-diagonal elements\ngammasCon of a transition probability matrix of dimension dim. — gammasCon2gammasUncon","text":"function un-constrains constrained non-diagonal elements gammasCon transition probability matrix dimension dim.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/gammasCon2gammasUncon.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This function un-constrains the constrained non-diagonal elements\ngammasCon of a transition probability matrix of dimension dim. — gammasCon2gammasUncon","text":"","code":"gammasCon2gammasUncon(gammasCon, dim)"},{"path":"https://loelschlaeger.github.io/fHMM/reference/gammasCon2gammasUncon.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"This function un-constrains the constrained non-diagonal elements\ngammasCon of a transition probability matrix of dimension dim. — gammasCon2gammasUncon","text":"gammasCon vector constrained non-diagonal elements transition probability matrix. dim dimension transition probability matrix.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/gammasCon2gammasUncon.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"This function un-constrains the constrained non-diagonal elements\ngammasCon of a transition probability matrix of dimension dim. — gammasCon2gammasUncon","text":"vector un-constrained non-diagonal elements transition probability matrix.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/gammasUncon2Gamma.html","id":null,"dir":"Reference","previous_headings":"","what":"This function builds a transition probability matrix from un-constrained\nnon-diagonal elements gammasUncon. — gammasUncon2Gamma","title":"This function builds a transition probability matrix from un-constrained\nnon-diagonal elements gammasUncon. — gammasUncon2Gamma","text":"function builds transition probability matrix un-constrained non-diagonal elements gammasUncon.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/gammasUncon2Gamma.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This function builds a transition probability matrix from un-constrained\nnon-diagonal elements gammasUncon. — gammasUncon2Gamma","text":"","code":"gammasUncon2Gamma(gammasUncon, dim)"},{"path":"https://loelschlaeger.github.io/fHMM/reference/gammasUncon2Gamma.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"This function builds a transition probability matrix from un-constrained\nnon-diagonal elements gammasUncon. — gammasUncon2Gamma","text":"gammasUncon vector un-constrained non-diagonal elements transition probability matrix. dim dimension transition probability matrix.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/gammasUncon2Gamma.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"This function builds a transition probability matrix from un-constrained\nnon-diagonal elements gammasUncon. — gammasUncon2Gamma","text":"transition probability matrix.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/gammasUncon2gammasCon.html","id":null,"dir":"Reference","previous_headings":"","what":"This function constrains non-diagonal elements gammasUncon of a\ntransition probability matrix. — gammasUncon2gammasCon","title":"This function constrains non-diagonal elements gammasUncon of a\ntransition probability matrix. — gammasUncon2gammasCon","text":"function constrains non-diagonal elements gammasUncon transition probability matrix.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/gammasUncon2gammasCon.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This function constrains non-diagonal elements gammasUncon of a\ntransition probability matrix. — gammasUncon2gammasCon","text":"","code":"gammasUncon2gammasCon(gammasUncon, dim)"},{"path":"https://loelschlaeger.github.io/fHMM/reference/gammasUncon2gammasCon.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"This function constrains non-diagonal elements gammasUncon of a\ntransition probability matrix. — gammasUncon2gammasCon","text":"gammasUncon vector un-constrained non-diagonal elements transition probability matrix. dim dimension transition probability matrix.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/gammasUncon2gammasCon.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"This function constrains non-diagonal elements gammasUncon of a\ntransition probability matrix. — gammasUncon2gammasCon","text":"vector constrained non-diagonal elements transition probability matrix.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/is_number.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if x is a ((non)-negative) ((non-)positive) (integer) numeric\n(vector). — is_number","title":"Check if x is a ((non)-negative) ((non-)positive) (integer) numeric\n(vector). — is_number","text":"Check x ((non)-negative) ((non-)positive) (integer) numeric (vector).","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/is_number.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if x is a ((non)-negative) ((non-)positive) (integer) numeric\n(vector). — is_number","text":"","code":"is_number(   x,   int = FALSE,   neg = FALSE,   non_neg = FALSE,   pos = FALSE,   non_pos = FALSE )"},{"path":"https://loelschlaeger.github.io/fHMM/reference/is_number.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if x is a ((non)-negative) ((non-)positive) (integer) numeric\n(vector). — is_number","text":"x R object. int boolean, TRUE checks x integer. neg boolean, TRUE checks x negative. non_neg boolean, TRUE checks x non-negative. pos boolean, TRUE checks x positive. non_pos boolean, TRUE checks x non-positive.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/is_number.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if x is a ((non)-negative) ((non-)positive) (integer) numeric\n(vector). — is_number","text":"boolean.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/is_tpm.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if x is a transition probability matrix. — is_tpm","title":"Check if x is a transition probability matrix. — is_tpm","text":"Check x transition probability matrix.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/is_tpm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if x is a transition probability matrix. — is_tpm","text":"","code":"is_tpm(x)"},{"path":"https://loelschlaeger.github.io/fHMM/reference/is_tpm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if x is a transition probability matrix. — is_tpm","text":"x matrix.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/is_tpm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if x is a transition probability matrix. — is_tpm","text":"boolean.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/match_all.html","id":null,"dir":"Reference","previous_headings":"","what":"Match positions of two numeric vectors ","title":"Match positions of two numeric vectors ","text":"function matches positions two numeric vectors.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/match_all.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Match positions of two numeric vectors ","text":"","code":"match_all(x, y)"},{"path":"https://loelschlaeger.github.io/fHMM/reference/match_all.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Match positions of two numeric vectors ","text":"x numeric vector. y Another numeric vector length x.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/match_all.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Match positions of two numeric vectors ","text":"integer vector length length(x) positions yin x.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/muCon2muUncon.html","id":null,"dir":"Reference","previous_headings":"","what":"This function un-constrains the constrained expected values muCon. — muCon2muUncon","title":"This function un-constrains the constrained expected values muCon. — muCon2muUncon","text":"function un-constrains constrained expected values muCon.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/muCon2muUncon.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This function un-constrains the constrained expected values muCon. — muCon2muUncon","text":"","code":"muCon2muUncon(muCon, link)"},{"path":"https://loelschlaeger.github.io/fHMM/reference/muCon2muUncon.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"This function un-constrains the constrained expected values muCon. — muCon2muUncon","text":"muCon vector constrained expected values. link boolean, determining whether apply link function.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/muCon2muUncon.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"This function un-constrains the constrained expected values muCon. — muCon2muUncon","text":"vector un-constrained expected values.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/muUncon2muCon.html","id":null,"dir":"Reference","previous_headings":"","what":"This function constrains the un-constrained expected values muUncon. — muUncon2muCon","title":"This function constrains the un-constrained expected values muUncon. — muUncon2muCon","text":"function constrains un-constrained expected values muUncon.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/muUncon2muCon.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This function constrains the un-constrained expected values muUncon. — muUncon2muCon","text":"","code":"muUncon2muCon(muUncon, link)"},{"path":"https://loelschlaeger.github.io/fHMM/reference/muUncon2muCon.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"This function constrains the un-constrained expected values muUncon. — muUncon2muCon","text":"muUncon vector un-constrained expected values. link boolean, determining whether apply link function.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/muUncon2muCon.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"This function constrains the un-constrained expected values muUncon. — muUncon2muCon","text":"vector constrained expected values.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/nLL_hhmm.html","id":null,"dir":"Reference","previous_headings":"","what":"Negative log-likelihood function of an HHMM — nLL_hhmm","title":"Negative log-likelihood function of an HHMM — nLL_hhmm","text":"function computes negative log-likelihood HHMM.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/nLL_hhmm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Negative log-likelihood function of an HHMM — nLL_hhmm","text":"","code":"nLL_hhmm(parUncon, observations, controls)"},{"path":"https://loelschlaeger.github.io/fHMM/reference/nLL_hhmm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Negative log-likelihood function of an HHMM — nLL_hhmm","text":"parUncon object class parUncon. observations matrix simulated empirical data used estimation. controls object class fHMM_controls.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/nLL_hhmm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Negative log-likelihood function of an HHMM — nLL_hhmm","text":"negative log-likelihood value.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/nLL_hmm.html","id":null,"dir":"Reference","previous_headings":"","what":"Negative log-likelihood function of an HMM — nLL_hmm","title":"Negative log-likelihood function of an HMM — nLL_hmm","text":"function computes negative log-likelihood HMM.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/nLL_hmm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Negative log-likelihood function of an HMM — nLL_hmm","text":"","code":"nLL_hmm(parUncon, observations, controls)"},{"path":"https://loelschlaeger.github.io/fHMM/reference/nLL_hmm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Negative log-likelihood function of an HMM — nLL_hmm","text":"parUncon object class parUncon. observations vector simulated empirical data used estimation. controls object class fHMM_controls.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/nLL_hmm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Negative log-likelihood function of an HMM — nLL_hmm","text":"negative log-likelihood value.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/par2parCon.html","id":null,"dir":"Reference","previous_headings":"","what":"This function transforms an object of class fHMM_parameters into an\nobject of class parCon. — par2parCon","title":"This function transforms an object of class fHMM_parameters into an\nobject of class parCon. — par2parCon","text":"function transforms object class fHMM_parameters object class parCon.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/par2parCon.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This function transforms an object of class fHMM_parameters into an\nobject of class parCon. — par2parCon","text":"","code":"par2parCon(par, controls)"},{"path":"https://loelschlaeger.github.io/fHMM/reference/par2parCon.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"This function transforms an object of class fHMM_parameters into an\nobject of class parCon. — par2parCon","text":"par object class fHMM_parameters. controls object classfHMM_controls.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/par2parCon.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"This function transforms an object of class fHMM_parameters into an\nobject of class parCon. — par2parCon","text":"object class parCon.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/par2parUncon.html","id":null,"dir":"Reference","previous_headings":"","what":"This function transforms an object of class fHMM_parameters into\nan object of class parUncon. — par2parUncon","title":"This function transforms an object of class fHMM_parameters into\nan object of class parUncon. — par2parUncon","text":"function transforms object class fHMM_parameters object class parUncon.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/par2parUncon.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This function transforms an object of class fHMM_parameters into\nan object of class parUncon. — par2parUncon","text":"","code":"par2parUncon(par, controls)"},{"path":"https://loelschlaeger.github.io/fHMM/reference/par2parUncon.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"This function transforms an object of class fHMM_parameters into\nan object of class parUncon. — par2parUncon","text":"par object class fHMM_parameters. controls object class fHMM_controls.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/par2parUncon.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"This function transforms an object of class fHMM_parameters into\nan object of class parUncon. — par2parUncon","text":"object class parUncon, .e. vector unconstrained model parameters estimated.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/parCon2par.html","id":null,"dir":"Reference","previous_headings":"","what":"This function transforms an object of class parCon into an object\nof class fHMM_parameters. — parCon2par","title":"This function transforms an object of class parCon into an object\nof class fHMM_parameters. — parCon2par","text":"function transforms object class parCon object class fHMM_parameters.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/parCon2par.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This function transforms an object of class parCon into an object\nof class fHMM_parameters. — parCon2par","text":"","code":"parCon2par(parCon, controls)"},{"path":"https://loelschlaeger.github.io/fHMM/reference/parCon2par.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"This function transforms an object of class parCon into an object\nof class fHMM_parameters. — parCon2par","text":"parCon object class parCon. controls object class fHMM_controls.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/parCon2par.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"This function transforms an object of class parCon into an object\nof class fHMM_parameters. — parCon2par","text":"object class fHMM_parameters.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/parCon2parUncon.html","id":null,"dir":"Reference","previous_headings":"","what":"This function transforms an object of class parCon into an\nobject of class parUncon. — parCon2parUncon","title":"This function transforms an object of class parCon into an\nobject of class parUncon. — parCon2parUncon","text":"function transforms object class parCon object class parUncon.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/parCon2parUncon.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This function transforms an object of class parCon into an\nobject of class parUncon. — parCon2parUncon","text":"","code":"parCon2parUncon(parCon, controls)"},{"path":"https://loelschlaeger.github.io/fHMM/reference/parCon2parUncon.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"This function transforms an object of class parCon into an\nobject of class parUncon. — parCon2parUncon","text":"parCon object class parCon. controls object class fHMM_controls.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/parCon2parUncon.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"This function transforms an object of class parCon into an\nobject of class parUncon. — parCon2parUncon","text":"object class parUncon.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/parUncon2par.html","id":null,"dir":"Reference","previous_headings":"","what":"This function transforms an object of class parUncon into an\nobject of class fHMM_parameters. — parUncon2par","title":"This function transforms an object of class parUncon into an\nobject of class fHMM_parameters. — parUncon2par","text":"function transforms object class parUncon object class fHMM_parameters.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/parUncon2par.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This function transforms an object of class parUncon into an\nobject of class fHMM_parameters. — parUncon2par","text":"","code":"parUncon2par(parUncon, controls)"},{"path":"https://loelschlaeger.github.io/fHMM/reference/parUncon2par.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"This function transforms an object of class parUncon into an\nobject of class fHMM_parameters. — parUncon2par","text":"parUncon object class parUncon. controls object class fHMM_controls.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/parUncon2par.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"This function transforms an object of class parUncon into an\nobject of class fHMM_parameters. — parUncon2par","text":"object class fHMM_parameters.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/parUncon2parCon.html","id":null,"dir":"Reference","previous_headings":"","what":"This function transforms an object of class parUncon into an object\nof class parCon. — parUncon2parCon","title":"This function transforms an object of class parUncon into an object\nof class parCon. — parUncon2parCon","text":"function transforms object class parUncon object class parCon.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/parUncon2parCon.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This function transforms an object of class parUncon into an object\nof class parCon. — parUncon2parCon","text":"","code":"parUncon2parCon(parUncon, controls)"},{"path":"https://loelschlaeger.github.io/fHMM/reference/parUncon2parCon.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"This function transforms an object of class parUncon into an object\nof class parCon. — parUncon2parCon","text":"parUncon object class parUncon. controls object class fHMM_controls.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/parUncon2parCon.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"This function transforms an object of class parUncon into an object\nof class parCon. — parUncon2parCon","text":"object class parCon, .e. vector constrained model parameters estimated.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/parameter_labels.html","id":null,"dir":"Reference","previous_headings":"","what":"Create labels for estimated parameters. — parameter_labels","title":"Create labels for estimated parameters. — parameter_labels","text":"function creates labels estimated parameters.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/parameter_labels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create labels for estimated parameters. — parameter_labels","text":"","code":"parameter_labels(controls, expected_length)"},{"path":"https://loelschlaeger.github.io/fHMM/reference/parameter_labels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create labels for estimated parameters. — parameter_labels","text":"controls object class fHMM_controls. expected_length expected output length.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/parameter_labels.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create labels for estimated parameters. — parameter_labels","text":"character vector parameter labels.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/plot.fHMM_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot method for an object of class fHMM_data. — plot.fHMM_data","title":"Plot method for an object of class fHMM_data. — plot.fHMM_data","text":"function plot method object class fHMM_data.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/plot.fHMM_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot method for an object of class fHMM_data. — plot.fHMM_data","text":"","code":"# S3 method for fHMM_data plot(x, events = NULL, ...)"},{"path":"https://loelschlaeger.github.io/fHMM/reference/plot.fHMM_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot method for an object of class fHMM_data. — plot.fHMM_data","text":"x object class fHMM_data. events Either NULL object class fHMM_events. ... Ignored.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/plot.fHMM_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot method for an object of class fHMM_data. — plot.fHMM_data","text":"return value.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/plot.fHMM_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot method for an object of class fHMM_model. — plot.fHMM_model","title":"Plot method for an object of class fHMM_model. — plot.fHMM_model","text":"function plot method object class fHMM_model.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/plot.fHMM_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot method for an object of class fHMM_model. — plot.fHMM_model","text":"","code":"# S3 method for fHMM_model plot(x, plot_type = \"ts\", events = NULL, colors = NULL, ...)"},{"path":"https://loelschlaeger.github.io/fHMM/reference/plot.fHMM_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot method for an object of class fHMM_model. — plot.fHMM_model","text":"x object class fHMM_model. plot_type character (vector), specifying type plot can one () \"ll\" visualization likelihood values different optimization runs, \"sdds\" visualization estimated state-dependent distributions, \"pr\" visualization model's (pseudo-) residuals, \"ts\" visualization financial time series. events object class fHMM_events. colors Either NULL character vector color names hexadecimal RGB triplets. ... Ignored.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/plot.fHMM_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot method for an object of class fHMM_model. — plot.fHMM_model","text":"return value. Draws plot current device.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/plot_ll.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualization of log-likelihood values. — plot_ll","title":"Visualization of log-likelihood values. — plot_ll","text":"function plots log-likelihood values different estimation runs.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/plot_ll.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualization of log-likelihood values. — plot_ll","text":"","code":"plot_ll(lls)"},{"path":"https://loelschlaeger.github.io/fHMM/reference/plot_ll.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualization of log-likelihood values. — plot_ll","text":"lls numeric vector log-likelihood values.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/plot_ll.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualization of log-likelihood values. — plot_ll","text":"return value.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/plot_pr.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualize pseudo residuals. — plot_pr","title":"Visualize pseudo residuals. — plot_pr","text":"function visualizes pseudo residuals.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/plot_pr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualize pseudo residuals. — plot_pr","text":"","code":"plot_pr(residuals, hierarchy)"},{"path":"https://loelschlaeger.github.io/fHMM/reference/plot_pr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualize pseudo residuals. — plot_pr","text":"residuals object class fHMM_residuals. hierarchy element controls$hierarchy.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/plot_pr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualize pseudo residuals. — plot_pr","text":"return value. Draws plot current device.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/plot_sdds.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualization of estimated state-dependent distributions. — plot_sdds","title":"Visualization of estimated state-dependent distributions. — plot_sdds","text":"function plots estimated state-dependent distributions.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/plot_sdds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualization of estimated state-dependent distributions. — plot_sdds","text":"","code":"plot_sdds(est, true = NULL, controls, colors)"},{"path":"https://loelschlaeger.github.io/fHMM/reference/plot_sdds.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualization of estimated state-dependent distributions. — plot_sdds","text":"est object class fHMM_parameters estimated parameters. true Either NULL object class fHMM_parameters true parameters. controls object class fHMM_controls. colors object class fHMM_colors.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/plot_sdds.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualization of estimated state-dependent distributions. — plot_sdds","text":"return value. Draws plot current device.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/plot_ts.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualize time series. — plot_ts","title":"Visualize time series. — plot_ts","text":"function visualizes data time series.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/plot_ts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualize time series. — plot_ts","text":"","code":"plot_ts(data, decoding = NULL, colors = NULL, events = NULL)"},{"path":"https://loelschlaeger.github.io/fHMM/reference/plot_ts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualize time series. — plot_ts","text":"data object class fHMM_data. decoding Either NULL object class fHMM_decoding. colors Either NULL object class fHMM_colors. Ignored decoding = NULL. events Either NULL object class fHMM_events.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/plot_ts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualize time series. — plot_ts","text":"return value. Draws plot current device.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/predict.fHMM_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Prediction — predict.fHMM_model","title":"Prediction — predict.fHMM_model","text":"function...","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/predict.fHMM_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prediction — predict.fHMM_model","text":"","code":"# S3 method for fHMM_model predict(object, ahead, ci_level = 0.05, ...)"},{"path":"https://loelschlaeger.github.io/fHMM/reference/predict.fHMM_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prediction — predict.fHMM_model","text":"object object class fHMM_model. ahead positive integer. ci_level confidence level, numeric 0 1. ... Ignored.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/predict.fHMM_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prediction — predict.fHMM_model","text":"object class fHMM_model.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/prepare_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare data for the fHMM package. — prepare_data","title":"Prepare data for the fHMM package. — prepare_data","text":"function simulates reads financial data fHMM package.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/prepare_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare data for the fHMM package. — prepare_data","text":"","code":"prepare_data(controls, true_parameters = NULL, seed = NULL)"},{"path":"https://loelschlaeger.github.io/fHMM/reference/prepare_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare data for the fHMM package. — prepare_data","text":"controls object class fHMM_controls. true_parameters object class fHMM_parameters, used simulation parameters. seed Set seed data simulation.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/prepare_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare data for the fHMM package. — prepare_data","text":"object class fHMM_data, list containing following elements: matrix dates simulated = FALSE controls$data$data_column specified, matrix time_points simulated = TRUE controls$data$data_column specified, matrix simulated markov_chain simulated = TRUE, matrix simulated empirical data used estimation, matrix time_series empirical data transformation log-returns simulated = FALSE, vector fine-scale chunk sizes T_star controls$hierarchy = TRUE, input controls, true_parameters.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/read_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Read data for the fHMM package. — read_data","title":"Read data for the fHMM package. — read_data","text":"function reads financial data fHMM package.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/read_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read data for the fHMM package. — read_data","text":"","code":"read_data(controls)"},{"path":"https://loelschlaeger.github.io/fHMM/reference/read_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read data for the fHMM package. — read_data","text":"controls object class fHMM_controls.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/read_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read data for the fHMM package. — read_data","text":"list containing following elements: matrix dates controls$simulated = FALSE controls$data$data_column specified, matrix time_points controls$simulated = TRUE controls$data$data_column specified, matrix empirical data used estimation, matrix time_series empirical data transformation log-returns, vector fine-scale chunk sizes T_star controls$hierarchy = TRUE.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/reorder_states.html","id":null,"dir":"Reference","previous_headings":"","what":"Reordering of estimated states. — reorder_states","title":"Reordering of estimated states. — reorder_states","text":"function reorders estimated states, useful comparison true parameters interpretation states.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/reorder_states.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reordering of estimated states. — reorder_states","text":"","code":"reorder_states(x, state_order)"},{"path":"https://loelschlaeger.github.io/fHMM/reference/reorder_states.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reordering of estimated states. — reorder_states","text":"x object class fHMM_model. state_order vector matrix determines new ordering. x$data$controls$hierarchy = FALSE, state_order must vector length x$data$controls$states integer values 1 x$data$controls$states. old state number x new state number y, put value x position y state_order. E.g. 2-state HMM, specifying state_order = c(2,1) swaps states. x$data$controls$hierarchy = TRUE, state_order must matrix dimension x$data$controls$states[1] x x$data$controls$states[2] + 1. first column orders coarse-scale states logic described . row, elements second last position order fine-scale states coarse-scale state specified first element. E.g. HHMM 2 coarse-scale 2 fine-scale states, specifying state_order = matrix(c(2,1,2,1,1,2),2,3) swaps coarse-scale states fine-scale states coarse-scale state 2.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/reorder_states.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reordering of estimated states. — reorder_states","text":"object class fHMM_model.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/set_controls.html","id":null,"dir":"Reference","previous_headings":"","what":"Set and check controls for the fHMM package. — set_controls","title":"Set and check controls for the fHMM package. — set_controls","text":"function sets checks specification controls fHMM package.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/set_controls.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set and check controls for the fHMM package. — set_controls","text":"","code":"set_controls(controls = NULL)"},{"path":"https://loelschlaeger.github.io/fHMM/reference/set_controls.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set and check controls for the fHMM package. — set_controls","text":"controls list controls. Either none, , selected parameters can specified. Unspecified parameters set default values (values brackets). hierarchy = TRUE, parameters (*) must vector length 2, first entry corresponds coarse-scale second entry fine-scale layer. hierarchy (FALSE): boolean, set TRUE hierarchical HMM. states (*) (2): number states underlying Markov chain. sdds (*) (\"t(df = Inf)\"): Specifying state-dependent distribution, one \"t\" (t-distribution) \"gamma\" (gamma distribution). fix one parameter values, write e.g. \"t(df = Inf)\" \"gamma(mu = 0, sigma = 1)\", respectively. fix different values one parameter different states, separate \"|\", e.g. \"t(mu = -1|1)\". horizon (*) (100): numeric, specifying length time horizon. first entry horizon ignored data specified. period (\"m\"): relevant hierarchy = TRUE horizon[2] = NA. case, specifies flexible, periodic fine-scale time horizon can one \"w\" week, \"m\" month, \"q\" quarter, \"y\" year. data (NA): list controls specifying data. data = NA, data gets simulated. Otherwise: file (*): character, path .csv-file financial data, must column named date_column (dates) data_column (financial data). date_column (*) (\"Date\"): character, name column file dates. Can NA case consecutive integers used time points. data_column (*) (\"Close\"): character, name column file financial data. (NA): character format \"YYYY-MM-DD\", setting lower data limit. lower limit = NA. Ignored controls$data$date_column NA. (NA): character format \"YYYY-MM-DD\", setting upper data limit. upper limit = NA. Ignored controls$data$date_column NA. logreturns (*) (FALSE): boolean, TRUE data transformed log-returns. merge (function(x) mean(x)): relevant hierarchy = TRUE. case, function, merges numeric vector fine-scale data x one coarse-scale observation. example, merge = function(x) mean(x) defines mean fine-scale data coarse-scale observation, merge = function(x) mean(abs(x)) mean absolute values, merge = function(x) (abs(x)) sum absolute values, merge = function(x) (tail(x,1)-head(x,1))/head(x,1) relative change first last fine-scale observation. fit: list controls specifying model fitting: runs (100): integer, setting number optimization runs. origin (FALSE): boolean, TRUE optimization initialized true parameter values. simulated data. origin = TRUE, sets run = 1 accept = 1:5. accept (1:3): integer (vector), specifying optimization runs accepted based output code nlm. gradtol (1e-6): positive numeric value, passed nlm. iterlim (200): positive integer, passed nlm. print.level (0): One 0, 1, 2, passed nlm. steptol (1e-6): positive numeric value, passed nlm.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/set_controls.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set and check controls for the fHMM package. — set_controls","text":"object class fHMM_controls.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/set_controls.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Set and check controls for the fHMM package. — set_controls","text":"See vignettes information specify controls.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/set_controls.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set and check controls for the fHMM package. — set_controls","text":"","code":"### HMM controls controls <- list(   states  = 2,   sdds    = \"t(mu = 0, sigma = 1, df = 1)\",   horizon = 400,   fit     = list(\"runs\" = 50) ) set_controls(controls) #> fHMM controls: #> * hierarchy: FALSE  #> * data type: simulated  #> * number of states: 2  #> * sdds: t(mu = 0, sigma = 1, df = 1)  #> * number of runs: 50    ### HHMM controls controls <- list(   hierarchy = TRUE ) set_controls(controls) #> fHMM controls: #> * hierarchy: TRUE  #> * data type: simulated  #> * number of states: 2 2  #> * sdds: t() t()  #> * number of runs: 100"},{"path":"https://loelschlaeger.github.io/fHMM/reference/sigmaCon2sigmaUncon.html","id":null,"dir":"Reference","previous_headings":"","what":"This function un-constrains the constrained standard deviations\nsigmaCon. — sigmaCon2sigmaUncon","title":"This function un-constrains the constrained standard deviations\nsigmaCon. — sigmaCon2sigmaUncon","text":"function un-constrains constrained standard deviations sigmaCon.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/sigmaCon2sigmaUncon.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This function un-constrains the constrained standard deviations\nsigmaCon. — sigmaCon2sigmaUncon","text":"","code":"sigmaCon2sigmaUncon(sigmaCon)"},{"path":"https://loelschlaeger.github.io/fHMM/reference/sigmaCon2sigmaUncon.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"This function un-constrains the constrained standard deviations\nsigmaCon. — sigmaCon2sigmaUncon","text":"sigmaCon vector constrained standard deviations.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/sigmaCon2sigmaUncon.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"This function un-constrains the constrained standard deviations\nsigmaCon. — sigmaCon2sigmaUncon","text":"vector un-constrained standard deviations.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/sigmaUncon2sigmaCon.html","id":null,"dir":"Reference","previous_headings":"","what":"This function constrains the un-constrained standard deviations\nsigmaUncon. — sigmaUncon2sigmaCon","title":"This function constrains the un-constrained standard deviations\nsigmaUncon. — sigmaUncon2sigmaCon","text":"function constrains un-constrained standard deviations sigmaUncon.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/sigmaUncon2sigmaCon.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This function constrains the un-constrained standard deviations\nsigmaUncon. — sigmaUncon2sigmaCon","text":"","code":"sigmaUncon2sigmaCon(sigmaUncon)"},{"path":"https://loelschlaeger.github.io/fHMM/reference/sigmaUncon2sigmaCon.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"This function constrains the un-constrained standard deviations\nsigmaUncon. — sigmaUncon2sigmaCon","text":"sigmaUncon vector un-constrained standard deviations.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/sigmaUncon2sigmaCon.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"This function constrains the un-constrained standard deviations\nsigmaUncon. — sigmaUncon2sigmaCon","text":"vector constrained standard deviations.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/simulate_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate data for the fHMM package. — simulate_data","title":"Simulate data for the fHMM package. — simulate_data","text":"function simulates financial data fHMM package.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/simulate_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate data for the fHMM package. — simulate_data","text":"","code":"simulate_data(controls, true_parameters, seed = NULL)"},{"path":"https://loelschlaeger.github.io/fHMM/reference/simulate_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate data for the fHMM package. — simulate_data","text":"controls object class fHMM_controls. true_parameters object class fHMM_parameters, used simulation parameters. seed Set seed data simulation.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/simulate_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate data for the fHMM package. — simulate_data","text":"list containing following elements: matrix time_points, matrix simulated markov_chain, matrix simulated data, vector fine-scale chunk sizes T_star controls$hierarchy = TRUE.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/simulate_markov_chain.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate a Markov chain. — simulate_markov_chain","title":"Simulate a Markov chain. — simulate_markov_chain","text":"function simulates Markov chain.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/simulate_markov_chain.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate a Markov chain. — simulate_markov_chain","text":"","code":"simulate_markov_chain(   Gamma,   T,   delta = Gamma2delta(Gamma),   seed = NULL,   total_length = T )"},{"path":"https://loelschlaeger.github.io/fHMM/reference/simulate_markov_chain.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate a Markov chain. — simulate_markov_chain","text":"Gamma transition probability matrix. T length Markov chain. delta probability vector, initial distribution. specified, delta set stationary distribution vector. seed Set seed. total_length integer, total length output vector. Must greater equal T.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/simulate_markov_chain.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate a Markov chain. — simulate_markov_chain","text":"numeric vector length T states.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/simulate_observations.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate state-dependent observations. — simulate_observations","title":"Simulate state-dependent observations. — simulate_observations","text":"function simulates state-dependent observations.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/simulate_observations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate state-dependent observations. — simulate_observations","text":"","code":"simulate_observations(   markov_chain,   sdd,   mus,   sigmas,   dfs = NULL,   seed = NULL,   total_length = length(markov_chain) )"},{"path":"https://loelschlaeger.github.io/fHMM/reference/simulate_observations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate state-dependent observations. — simulate_observations","text":"markov_chain numeric vector states Markov chain. sdd name state-dependent distribution, one \"t\" \"gamma\". mus vector expected values. sigmas vector standard deviations. dfs vector degrees freedom (relevant sdd = \"t\"). seed Set seed. total_length integer, total length output vector. Must greater equal length(markov_chain).","code":""},{"path":"https://loelschlaeger.github.io/fHMM/reference/simulate_observations.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate state-dependent observations. — simulate_observations","text":"numeric vector length total_length, first length(markov_chain) elements numeric values last total_length - length(markov_chain) elements NA.","code":""},{"path":[]},{"path":"https://loelschlaeger.github.io/fHMM/news/index.html","id":"fhmm-030","dir":"Changelog","previous_headings":"","what":"fHMM 0.3.0","title":"fHMM 0.3.0","text":"CRAN release: 2021-06-16 Created vignettes. Easier specification controls. Submit function controls$data$cs_transform (former controls$data$cs_type) make coarse-scale data transformation. Determine via controls$data$log_returns whether data transformed log-returns. Created package start-message. Fixed minor bugs.","code":""},{"path":"https://loelschlaeger.github.io/fHMM/news/index.html","id":"fhmm-020","dir":"Changelog","previous_headings":"","what":"fHMM 0.2.0","title":"fHMM 0.2.0","text":"CRAN release: 2021-03-13 Improved documentation functions README. Improved structure controls. (#37 #38)","code":""},{"path":"https://loelschlaeger.github.io/fHMM/news/index.html","id":"fhmm-010","dir":"Changelog","previous_headings":"","what":"fHMM 0.1.0","title":"fHMM 0.1.0","text":"CRAN release: 2021-02-22 Initial version.","code":""}]
